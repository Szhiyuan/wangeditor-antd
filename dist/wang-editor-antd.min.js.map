{"version":3,"file":"wang-editor-antd.min.js","sources":["wang-editor-antd.min.js"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n        typeof define === 'function' && define.amd ? define(factory) :\n            (global.wangEditor = factory());\n}(this, (function () {\n    'use strict';\n\n    /*\n    poly-fill\n*/\n\n    var polyfill = function () {\n\n        // Object.assign\n        if (typeof Object.assign != 'function') {\n            Object.assign = function (target, varArgs) {\n                // .length of function is 2\n                if (target == null) {\n                    // TypeError if undefined or null\n                    throw new TypeError('Cannot convert undefined or null to object');\n                }\n\n                var to = Object(target);\n\n                for (var index = 1; index < arguments.length; index++) {\n                    var nextSource = arguments[index];\n\n                    if (nextSource != null) {\n                        // Skip over if undefined or null\n                        for (var nextKey in nextSource) {\n                            // Avoid bugs when hasOwnProperty is shadowed\n                            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                                to[nextKey] = nextSource[nextKey];\n                            }\n                        }\n                    }\n                }\n                return to;\n            };\n        }\n\n        // IE 中兼容 Element.prototype.matches\n        // if (!Element.prototype.matches) {\n        //     Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n        //         let matches = (this.document || this.ownerDocument).querySelectorAll(s),\n        //             i = matches.length;\n        //         while (--i >= 0 && matches.item(i) !== this){return i}\n        //         return i > -1;\n        //     };\n        // }\n    };\n\n    /*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\n    function createElemByHTML(html) {\n        var div = void 0;\n        div = document.createElement('div');\n        div.innerHTML = html;\n        return div.children;\n    }\n\n// 是否是 DOM List\n    function isDOMList(selector) {\n        if (!selector) {\n            return false;\n        }\n        if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n            return true;\n        }\n        return false;\n    }\n\n// 封装 document.querySelectorAll\n    function querySelectorAll(selector) {\n        var result = document.querySelectorAll(selector);\n        if (isDOMList(result)) {\n            return result;\n        } else {\n            return [result];\n        }\n    }\n\n// 记录所有的事件绑定\n    var eventList = [];\n\n// 创建构造函数\n    function DomElement(selector) {\n        if (!selector) {\n            return;\n        }\n\n        // selector 本来就是 DomElement 对象，直接返回\n        if (selector instanceof DomElement) {\n            return selector;\n        }\n\n        this.selector = selector;\n        var nodeType = selector.nodeType;\n\n        // 根据 selector 得出的结果（如 DOM，DOM List）\n        var selectorResult = [];\n        if (nodeType === 9) {\n            // document 节点\n            selectorResult = [selector];\n        } else if (nodeType === 1) {\n            // 单个 DOM 节点\n            selectorResult = [selector];\n        } else if (isDOMList(selector) || selector instanceof Array) {\n            // DOM List 或者数组\n            selectorResult = selector;\n        } else if (typeof selector === 'string') {\n            // 字符串\n            selector = selector.replace('/\\n/mg', '').trim();\n            if (selector.indexOf('<') === 0) {\n                // 如 <div>\n                selectorResult = createElemByHTML(selector);\n            } else {\n                // 如 #id .class\n                selectorResult = querySelectorAll(selector);\n            }\n        }\n\n        var length = selectorResult.length;\n        if (!length) {\n            // 空数组\n            return this;\n        }\n\n        // 加入 DOM 节点\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            this[i] = selectorResult[i];\n        }\n        this.length = length;\n    }\n\n// 修改原型\n    DomElement.prototype = {\n        constructor: DomElement,\n\n        // 类数组，forEach\n        forEach: function forEach(fn) {\n            var i = void 0;\n            for (i = 0; i < this.length; i++) {\n                var elem = this[i];\n                var result = fn.call(elem, elem, i);\n                if (result === false) {\n                    break;\n                }\n            }\n            return this;\n        },\n\n        // clone\n        clone: function clone(deep) {\n            var cloneList = [];\n            this.forEach(function (elem) {\n                cloneList.push(elem.cloneNode(!!deep));\n            });\n            return $(cloneList);\n        },\n\n        // 获取第几个元素\n        get: function get(index) {\n            var length = this.length;\n            if (index >= length) {\n                index = index % length;\n            }\n            return $(this[index]);\n        },\n\n        // 第一个\n        first: function first() {\n            return this.get(0);\n        },\n\n        // 最后一个\n        last: function last() {\n            var length = this.length;\n            return this.get(length - 1);\n        },\n\n        // 绑定事件\n        on: function on(type, selector, fn) {\n            // selector 不为空，证明绑定事件要加代理\n            if (!fn) {\n                fn = selector;\n                selector = null;\n            }\n\n            // type 是否有多个\n            var types = [];\n            types = type.split(/\\s+/);\n\n            return this.forEach(function (elem) {\n                types.forEach(function (type) {\n                    if (!type) {\n                        return;\n                    }\n\n                    // 记录下，方便后面解绑\n                    eventList.push({\n                        elem: elem,\n                        type: type,\n                        fn: fn\n                    });\n\n                    if (!selector) {\n                        // 无代理\n                        elem.addEventListener(type, fn);\n                        return;\n                    }\n\n                    // 有代理\n                    elem.addEventListener(type, function (e) {\n                        var target = e.target;\n                        if (target.matches(selector)) {\n                            fn.call(target, e);\n                        }\n                    });\n                });\n            });\n        },\n\n        // 取消事件绑定\n        off: function off(type, fn) {\n            return this.forEach(function (elem) {\n                elem.removeEventListener(type, fn);\n            });\n        },\n\n        // 获取/设置 属性\n        attr: function attr(key, val) {\n            if (val == null) {\n                // 获取值\n                return this[0].getAttribute(key);\n            } else {\n                // 设置值\n                return this.forEach(function (elem) {\n                    elem.setAttribute(key, val);\n                });\n            }\n        },\n\n        // 添加 class\n        addClass: function addClass(className) {\n            if (!className) {\n                return this;\n            }\n            return this.forEach(function (elem) {\n                var arr = void 0;\n                if (elem.className) {\n                    // 解析当前 className 转换为数组\n                    arr = elem.className.split(/\\s/);\n                    arr = arr.filter(function (item) {\n                        return !!item.trim();\n                    });\n                    // 添加 class\n                    if (arr.indexOf(className) < 0) {\n                        arr.push(className);\n                    }\n                    // 修改 elem.class\n                    elem.className = arr.join(' ');\n                } else {\n                    elem.className = className;\n                }\n            });\n        },\n\n        // 删除 class\n        removeClass: function removeClass(className) {\n            if (!className) {\n                return this;\n            }\n            return this.forEach(function (elem) {\n                var arr = void 0;\n                if (elem.className) {\n                    // 解析当前 className 转换为数组\n                    arr = elem.className.split(/\\s/);\n                    arr = arr.filter(function (item) {\n                        item = item.trim();\n                        // 删除 class\n                        if (!item || item === className) {\n                            return false;\n                        }\n                        return true;\n                    });\n                    // 修改 elem.class\n                    elem.className = arr.join(' ');\n                }\n            });\n        },\n\n        // 修改 css\n        css: function css(key, val) {\n            var currentStyle = key + ':' + val + ';';\n            return this.forEach(function (elem) {\n                var style = (elem.getAttribute('style') || '').trim();\n                var styleArr = void 0,\n                    resultArr = [];\n                if (style) {\n                    // 将 style 按照 ; 拆分为数组\n                    styleArr = style.split(';');\n                    styleArr.forEach(function (item) {\n                        // 对每项样式，按照 : 拆分为 key 和 value\n                        var arr = item.split(':').map(function (i) {\n                            return i.trim();\n                        });\n                        if (arr.length === 2) {\n                            resultArr.push(arr[0] + ':' + arr[1]);\n                        }\n                    });\n                    // 替换或者新增\n                    resultArr = resultArr.map(function (item) {\n                        if (item.indexOf(key) === 0) {\n                            return currentStyle;\n                        } else {\n                            return item;\n                        }\n                    });\n                    if (resultArr.indexOf(currentStyle) < 0) {\n                        resultArr.push(currentStyle);\n                    }\n                    // 结果\n                    elem.setAttribute('style', resultArr.join('; '));\n                } else {\n                    // style 无值\n                    elem.setAttribute('style', currentStyle);\n                }\n            });\n        },\n\n        // 显示\n        show: function show() {\n            return this.css('display', 'block');\n        },\n\n        // 隐藏\n        hide: function hide() {\n            return this.css('display', 'none');\n        },\n\n        // 获取子节点\n        children: function children() {\n            var elem = this[0];\n            if (!elem) {\n                return null;\n            }\n\n            return $(elem.children);\n        },\n\n        // 获取子节点（包括文本节点）\n        childNodes: function childNodes() {\n            var elem = this[0];\n            if (!elem) {\n                return null;\n            }\n\n            return $(elem.childNodes);\n        },\n\n        // 增加子节点\n        append: function append($children) {\n            return this.forEach(function (elem) {\n                $children.forEach(function (child) {\n                    elem.appendChild(child);\n                });\n            });\n        },\n\n        // 移除当前节点\n        remove: function remove() {\n            return this.forEach(function (elem) {\n                if (elem.remove) {\n                    elem.remove();\n                } else {\n                    var parent = elem.parentElement;\n                    parent && parent.removeChild(elem);\n                }\n            });\n        },\n\n        // 是否包含某个子节点\n        isContain: function isContain($child) {\n            var elem = this[0];\n            var child = $child[0];\n            return elem.contains(child);\n        },\n\n        // 尺寸数据\n        getSizeData: function getSizeData() {\n            var elem = this[0];\n            return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n        },\n\n        // 封装 nodeName\n        getNodeName: function getNodeName() {\n            var elem = this[0];\n            return elem.nodeName;\n        },\n\n        // 从当前元素查找\n        find: function find(selector) {\n            var elem = this[0];\n            return $(elem.querySelectorAll(selector));\n        },\n\n        // 获取当前元素的 text\n        text: function text(val) {\n            if (!val) {\n                // 获取 text\n                var elem = this[0];\n                return elem.innerHTML.replace(/<.*?>/g, function () {\n                    return '';\n                });\n            } else {\n                // 设置 text\n                return this.forEach(function (elem) {\n                    elem.innerHTML = val;\n                });\n            }\n        },\n\n        // 获取 html\n        html: function html(value) {\n            var elem = this[0];\n            if (value == null) {\n                return elem.innerHTML;\n            } else {\n                elem.innerHTML = value;\n                return this;\n            }\n        },\n\n        // 获取 value\n        val: function val() {\n            var elem = this[0];\n            return elem.value.trim();\n        },\n\n        // focus\n        focus: function focus() {\n            return this.forEach(function (elem) {\n                elem.focus();\n            });\n        },\n\n        // parent\n        parent: function parent() {\n            var elem = this[0];\n            return $(elem.parentElement);\n        },\n\n        // parentUntil 找到符合 selector 的父节点\n        parentUntil: function parentUntil(selector, _currentElem) {\n            var results = document.querySelectorAll(selector);\n            var length = results.length;\n            if (!length) {\n                // 传入的 selector 无效\n                return null;\n            }\n\n            var elem = _currentElem || this[0];\n            if (elem.nodeName === 'BODY') {\n                return null;\n            }\n\n            var parent = elem.parentElement;\n            var i = void 0;\n            for (i = 0; i < length; i++) {\n                if (parent === results[i]) {\n                    // 找到，并返回\n                    return $(parent);\n                }\n            }\n\n            // 继续查找\n            return this.parentUntil(selector, parent);\n        },\n\n        // 判断两个 elem 是否相等\n        equal: function equal($elem) {\n            if ($elem.nodeType === 1) {\n                return this[0] === $elem;\n            } else {\n                return this[0] === $elem[0];\n            }\n        },\n\n        // 将该元素插入到某个元素前面\n        insertBefore: function insertBefore(selector) {\n            var $referenceNode = $(selector);\n            var referenceNode = $referenceNode[0];\n            if (!referenceNode) {\n                return this;\n            }\n            return this.forEach(function (elem) {\n                var parent = referenceNode.parentNode;\n                parent.insertBefore(elem, referenceNode);\n            });\n        },\n\n        // 将该元素插入到某个元素后面\n        insertAfter: function insertAfter(selector) {\n            var $referenceNode = $(selector);\n            var referenceNode = $referenceNode[0];\n            if (!referenceNode) {\n                return this;\n            }\n            return this.forEach(function (elem) {\n                var parent = referenceNode.parentNode;\n                if (parent.lastChild === referenceNode) {\n                    // 最后一个元素\n                    parent.appendChild(elem);\n                } else {\n                    // 不是最后一个元素\n                    parent.insertBefore(elem, referenceNode.nextSibling);\n                }\n            });\n        }\n    };\n\n// new 一个对象\n    function $(selector) {\n        return new DomElement(selector);\n    }\n\n// 解绑所有事件，用于销毁编辑器\n    $.offAll = function () {\n        eventList.forEach(function (item) {\n            var elem = item.elem;\n            var type = item.type;\n            var fn = item.fn;\n            // 解绑\n            elem.removeEventListener(type, fn);\n        });\n    };\n\n    /*\n    配置信息\n*/\n\n    var config = {\n\n        // 默认菜单配置\n        menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n        fontNames: ['宋体', '楷体', '楷体GB2312', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n\n        colors: ['rgb(0,0,0)', 'rgba(0,0,0,65)', '#1890ff', '#13c2c2', '#52c41a', '#2f54eb', '#722ed1', '#eb2f96', '#fadb14', '#faad14', '#fa541c', '#f5222d', '#ffffff'],\n\n        // // 语言配置\n        // lang: {\n        //     '设置标题': 'title',\n        //     '正文': 'p',\n        //     '链接文字': 'link text',\n        //     '链接': 'link',\n        //     '插入': 'insert',\n        //     '创建': 'init'\n        // },\n\n        // 表情\n        emotions: [{\n            // tab 的标题\n            title: '默认',\n            // type -> 'emoji' / 'image'\n            type: 'image',\n            // content -> 数组\n            content: [{\n                alt: '[坏笑]',\n                src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n            }, {\n                alt: '[舔屏]',\n                src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n            }, {\n                alt: '[污]',\n                src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n            }]\n        }, {\n            // tab 的标题\n            title: '新浪',\n            // type -> 'emoji' / 'image'\n            type: 'image',\n            // content -> 数组\n            content: [{\n                src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n                alt: '[草泥马]'\n            }, {\n                src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n                alt: '[神马]'\n            }, {\n                src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n                alt: '[浮云]'\n            }]\n        }, {\n            // tab 的标题\n            title: 'emoji',\n            // type -> 'emoji' / 'image'\n            type: 'emoji',\n            // content -> 数组\n            content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n        }],\n\n        // 编辑区域的 z-index\n        zIndex: 2,\n\n        // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n        debug: false,\n\n        // 插入链接时候的格式校验\n        linkCheck: function linkCheck(text, link) {\n            // text 是插入的文字\n            // link 是插入的链接\n            return true; // 返回 true 即表示成功\n            // return '校验失败' // 返回字符串即表示失败的提示信息\n        },\n\n        // 插入网络图片的校验\n        linkImgCheck: function linkImgCheck(src) {\n            // src 即图片的地址\n            return true; // 返回 true 即表示成功\n            // return '校验失败'  // 返回字符串即表示失败的提示信息\n        },\n\n        // 粘贴过滤样式，默认开启\n        pasteFilterStyle: true,\n\n        // 粘贴内容时，忽略图片。默认关闭\n        pasteIgnoreImg: false,\n\n        // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n        // IE 暂时不支持\n        pasteTextHandle: function pasteTextHandle(content) {\n            // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n            return content;\n        },\n\n        // onchange 事件\n        // onchange: function (html) {\n        //     // html 即变化之后的内容\n        //     console.log(html)\n        // },\n\n        // 是否显示添加网络图片的 tab\n        showLinkImg: true,\n\n        // 插入网络图片的回调\n        linkImgCallback: function linkImgCallback(url) {\n            // console.log(url)  // url 即插入图片的地址\n        },\n\n        // 默认上传图片 max size: 5M\n        uploadImgMaxSize: 5 * 1024 * 1024,\n\n        // 配置一次最多上传几个图片\n        // uploadImgMaxLength: 5,\n\n        // 上传图片，是否显示 base64 格式\n        uploadImgShowBase64: false,\n\n        // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n        // uploadImgServer: '/upload',\n\n        // 自定义配置 filename\n        uploadFileName: '',\n\n        // 上传图片的自定义参数\n        uploadImgParams: {\n            // token: 'abcdef12345'\n        },\n\n        // 上传图片的自定义header\n        uploadImgHeaders: {\n            // 'Accept': 'text/x-json'\n        },\n\n        // 配置 XHR withCredentials\n        withCredentials: false,\n\n        // 自定义上传图片超时时间 ms\n        uploadImgTimeout: 10000,\n\n        // 上传图片 hook\n        uploadImgHooks: {\n            // customInsert: function (insertLinkImg, result, editor) {\n            //     console.log('customInsert')\n            //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n            //     const data = result.data1 || []\n            //     data.forEach(link => {\n            //         insertLinkImg(link)\n            //     })\n            // },\n            before: function before(xhr, editor, files) {\n                // 图片上传之前触发\n\n                // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                // return {\n                //     prevent: true,\n                //     msg: '放弃上传'\n                // }\n            },\n            success: function success(xhr, editor, result) {\n                // 图片上传并返回结果，图片插入成功之后触发\n            },\n            fail: function fail(xhr, editor, result) {\n                // 图片上传并返回结果，但图片插入错误时触发\n            },\n            error: function error(xhr, editor) {\n                // 图片上传出错时触发\n            },\n            timeout: function timeout(xhr, editor) {\n                // 图片上传超时时触发\n            }\n        },\n\n        // 是否上传七牛云，默认为 false\n        qiniu: false,\n        width:'100%',\n        minHeight:'100px',\n        maxHeight:'400px',\n        textBgColor:'#ffffff'\n\n    };\n\n    /*\n    工具\n*/\n\n// 和 UA 相关的属性\n    var UA = {\n        _ua: navigator.userAgent,\n\n        // 是否 webkit\n        isWebkit: function isWebkit() {\n            var reg = /webkit/i;\n            return reg.test(this._ua);\n        },\n\n        // 是否 IE\n        isIE: function isIE() {\n            return 'ActiveXObject' in window;\n        }\n    };\n\n// 遍历对象\n    function objForEach(obj, fn) {\n        var key = void 0,\n            result = void 0;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                result = fn.call(obj, key, obj[key]);\n                if (result === false) {\n                    break;\n                }\n            }\n        }\n    }\n\n// 遍历类数组\n    function arrForEach(fakeArr, fn) {\n        var i = void 0,\n            item = void 0,\n            result = void 0;\n        var length = fakeArr.length || 0;\n        for (i = 0; i < length; i++) {\n            item = fakeArr[i];\n            result = fn.call(fakeArr, item, i);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n\n// 获取随机数\n    function getRandom(prefix) {\n        return prefix + Math.random().toString().slice(2);\n    }\n\n// 替换 html 特殊字符\n    function replaceHtmlSymbol(html) {\n        if (html == null) {\n            return '';\n        }\n        return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n    }\n\n// 返回百分比的格式\n\n\n// 判断是不是 function\n    function isFunction(fn) {\n        return typeof fn === 'function';\n    }\n\n    /*\n    bold-menu\n*/\n\n// 构造函数\n    function Bold(editor) {\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"icon-bold\"></i>\\n        </div>');\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n// 原型\n    Bold.prototype = {\n        constructor: Bold,\n\n        // 点击事件\n        onClick: function onClick(e) {\n            // 点击菜单将触发这里\n\n            var editor = this.editor;\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n            if (isSeleEmpty) {\n                // 选区是空的，插入并选中一个“空白”\n                editor.selection.createEmptyRange();\n            }\n\n            // 执行 bold 命令\n            editor.cmd.do('bold');\n\n            if (isSeleEmpty) {\n                // 需要将选取折叠起来\n                editor.selection.collapseRange();\n                editor.selection.restoreSelection();\n            }\n        },\n\n        // 试图改变 active 状态\n        tryChangeActive: function tryChangeActive(e) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            if (editor.cmd.queryCommandState('bold')) {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    };\n\n    /*\n    替换多语言\n */\n\n    var replaceLang = function (editor, str) {\n        var langArgs = editor.config.langArgs || [];\n        var result = str;\n\n        langArgs.forEach(function (item) {\n            var reg = item.reg;\n            var val = item.val;\n\n            if (reg.test(result)) {\n                result = result.replace(reg, function () {\n                    return val;\n                });\n            }\n        });\n\n        return result;\n    };\n\n    /*\n    droplist\n*/\n    var _emptyFn = function _emptyFn() {\n    };\n\n// 构造函数\n    function DropList(menu, opt) {\n        var _this = this;\n\n        // droplist 所依附的菜单\n        var editor = menu.editor;\n        this.menu = menu;\n        this.opt = opt;\n        // 容器\n        var $container = $('<div class=\"w-e-droplist\"></div>');\n\n        // 标题\n        var $title = opt.$title;\n        var titleHtml = void 0;\n        if ($title) {\n            // 替换多语言\n            titleHtml = $title.html();\n            titleHtml = replaceLang(editor, titleHtml);\n            $title.html(titleHtml);\n\n            $title.addClass('w-e-dp-title');\n            $container.append($title);\n        }\n\n        var list = opt.list || [];\n        var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n        var onClick = opt.onClick || _emptyFn;\n\n        // 加入 DOM 并绑定事件\n        var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n        $container.append($list);\n        list.forEach(function (item) {\n            var $elem = item.$elem;\n\n            // 替换多语言\n            var elemHtml = $elem.html();\n            elemHtml = replaceLang(editor, elemHtml);\n            $elem.html(elemHtml);\n\n            var value = item.value;\n            var $li = $('<li class=\"w-e-item\"></li>');\n            if ($elem) {\n                $li.append($elem);\n                $list.append($li);\n                $li.on('click', function (e) {\n                    onClick(value);\n\n                    // 隐藏\n                    _this.hideTimeoutId = setTimeout(function () {\n                        _this.hide();\n                    }, 0);\n                });\n            }\n        });\n\n        // 绑定隐藏事件\n        $container.on('mouseleave', function (e) {\n            _this.hideTimeoutId = setTimeout(function () {\n                _this.hide();\n            }, 0);\n        });\n\n        // 记录属性\n        this.$container = $container;\n\n        // 基本属性\n        this._rendered = false;\n        this._show = false;\n    }\n\n// 原型\n    DropList.prototype = {\n        constructor: DropList,\n\n        // 显示（插入DOM）\n        show: function show() {\n            if (this.hideTimeoutId) {\n                // 清除之前的定时隐藏\n                clearTimeout(this.hideTimeoutId);\n            }\n\n            var menu = this.menu;\n            var $menuELem = menu.$elem;\n            var $container = this.$container;\n            if (this._show) {\n                return;\n            }\n            if (this._rendered) {\n                // 显示\n                $container.show();\n            } else {\n                var menuHeight = $menuELem.getSizeData().height || 0;\n                var width = this.opt.width || 100; // 默认为 100\n                $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n                // 加入到 DOM\n                $menuELem.append($container);\n                this._rendered = true;\n            }\n\n            // 修改属性\n            this._show = true;\n        },\n\n        // 隐藏（移除DOM）\n        hide: function hide() {\n            if (this.showTimeoutId) {\n                // 清除之前的定时显示\n                clearTimeout(this.showTimeoutId);\n            }\n\n            var $container = this.$container;\n            if (!this._show) {\n                return;\n            }\n            // 隐藏并需改属性\n            $container.hide();\n            this._show = false;\n        }\n    };\n\n    /*\n    menu - header\n*/\n\n// 构造函数\n    function Head(editor) {\n        var _this = this;\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"icon-number\"></i></div>');\n        this.type = 'droplist';\n\n        // 当前是否 active 状态\n        this._active = false;\n\n        // 初始化 droplist\n        this.droplist = new DropList(this, {\n            width: 100,\n            $title: $('<p>设置标题</p>'),\n            type: 'list', // droplist 以列表形式展示\n            list: [{$elem: $('<h1>H1</h1>'), value: '<h1>'}, {\n                $elem: $('<h2>H2</h2>'),\n                value: '<h2>'\n            }, {$elem: $('<h3>H3</h3>'), value: '<h3>'}, {\n                $elem: $('<h4>H4</h4>'),\n                value: '<h4>'\n            }, {$elem: $('<h5>H5</h5>'), value: '<h5>'}, {$elem: $('<p>正文</p>'), value: '<p>'}],\n            onClick: function onClick(value) {\n                // 注意 this 是指向当前的 Head 对象\n                _this._command(value);\n            }\n        });\n    }\n\n// 原型\n    Head.prototype = {\n        constructor: Head,\n\n        // 执行命令\n        _command: function _command(value) {\n            var editor = this.editor;\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (editor.$textElem.equal($selectionElem)) {\n                // 不能选中多行来设置标题，否则会出现问题\n                // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n                return;\n            }\n\n            editor.cmd.do('formatBlock', value);\n        },\n\n        // 试图改变 active 状态\n        tryChangeActive: function tryChangeActive(e) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            var reg = /^h/i;\n            var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n            if (reg.test(cmdValue)) {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    };\n\n    /*\n    menu - fontSize\n*/\n\n// 构造函数\n    function FontSize(editor) {\n        var _this = this;\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"icon-font-size\"></i></div>');\n        this.type = 'droplist';\n\n        // 当前是否 active 状态\n        this._active = false;\n\n        // 初始化 droplist\n        this.droplist = new DropList(this, {\n            width: 160,\n            $title: $('<p>字号</p>'),\n            type: 'list', // droplist 以列表形式展示\n            list: [{\n                $elem: $('<span style=\"font-size: x-small;\">x-small</span>'),\n                value: '1'\n            }, {$elem: $('<span style=\"font-size: small;\">small</span>'), value: '2'}, {\n                $elem: $('<span>normal</span>'),\n                value: '3'\n            }, {\n                $elem: $('<span style=\"font-size: large;\">large</span>'),\n                value: '4'\n            }, {\n                $elem: $('<span style=\"font-size: x-large;\">x-large</span>'),\n                value: '5'\n            }, {$elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'), value: '6'}],\n            onClick: function onClick(value) {\n                // 注意 this 是指向当前的 FontSize 对象\n                _this._command(value);\n            }\n        });\n    }\n\n// 原型\n    FontSize.prototype = {\n        constructor: FontSize,\n\n        // 执行命令\n        _command: function _command(value) {\n            var editor = this.editor;\n            editor.cmd.do('fontSize', value);\n        }\n    };\n\n    /*\n    menu - fontName\n*/\n\n// 构造函数\n    function FontName(editor) {\n        var _this = this;\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"icon-line-height\"></i></div>');\n        this.type = 'droplist';\n\n        // 当前是否 active 状态\n        this._active = false;\n\n        // 获取配置的字体\n        var config = editor.config;\n        var fontNames = config.fontNames || [];\n\n        // 初始化 droplist\n        this.droplist = new DropList(this, {\n            width: 100,\n            $title: $('<p>字体</p>'),\n            type: 'list', // droplist 以列表形式展示\n            list: fontNames.map(function (fontName) {\n                return {\n                    $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'),\n                    value: fontName\n                };\n            }),\n            onClick: function onClick(value) {\n                // 注意 this 是指向当前的 FontName 对象\n                _this._command(value);\n            }\n        });\n    }\n\n// 原型\n    FontName.prototype = {\n        constructor: FontName,\n\n        _command: function _command(value) {\n            var editor = this.editor;\n            editor.cmd.do('fontName', value);\n        }\n    };\n\n    /*\n    panel\n*/\n\n    var emptyFn = function emptyFn() {\n    };\n\n// 记录已经显示 panel 的菜单\n    var _isCreatedPanelMenus = [];\n\n// 构造函数\n    function Panel(menu, opt) {\n        this.menu = menu;\n        this.opt = opt;\n    }\n\n// 原型\n    Panel.prototype = {\n        constructor: Panel,\n\n        // 显示（插入DOM）\n        show: function show() {\n            var _this = this;\n\n            var menu = this.menu;\n            if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n                // 该菜单已经创建了 panel 不能再创建\n                return;\n            }\n\n            var editor = menu.editor;\n            var $body = $('body');\n            var $textContainerElem = editor.$textContainerElem;\n            var opt = this.opt;\n\n            // panel 的容器\n            var $container = $('<div class=\"w-e-panel-container\"></div>');\n            var width = opt.width || 300; // 默认 300px\n            $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n            // 添加关闭按钮\n            var $closeBtn = $('<i class=\"icon-close w-e-panel-close\"></i>');\n            $container.append($closeBtn);\n            $closeBtn.on('click', function () {\n                _this.hide();\n            });\n\n            // 准备 tabs 容器\n            var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n            var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n            $container.append($tabTitleContainer).append($tabContentContainer);\n\n            // 设置高度\n            var height = opt.height;\n            if (height) {\n                $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n            }\n\n            // tabs\n            var tabs = opt.tabs || [];\n            var tabTitleArr = [];\n            var tabContentArr = [];\n            tabs.forEach(function (tab, tabIndex) {\n                if (!tab) {\n                    return;\n                }\n                var title = tab.title || '';\n                var tpl = tab.tpl || '';\n\n                // 替换多语言\n                title = replaceLang(editor, title);\n                tpl = replaceLang(editor, tpl);\n\n                // 添加到 DOM\n                var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n                $tabTitleContainer.append($title);\n                var $content = $(tpl);\n                $tabContentContainer.append($content);\n\n                // 记录到内存\n                $title._index = tabIndex;\n                tabTitleArr.push($title);\n                tabContentArr.push($content);\n\n                // 设置 active 项\n                if (tabIndex === 0) {\n                    $title._active = true;\n                    $title.addClass('w-e-active');\n                } else {\n                    $content.hide();\n                }\n\n                // 绑定 tab 的事件\n                $title.on('click', function (e) {\n                    if ($title._active) {\n                        return;\n                    }\n                    // 隐藏所有的 tab\n                    tabTitleArr.forEach(function ($title) {\n                        $title._active = false;\n                        $title.removeClass('w-e-active');\n                    });\n                    tabContentArr.forEach(function ($content) {\n                        $content.hide();\n                    });\n\n                    // 显示当前的 tab\n                    $title._active = true;\n                    $title.addClass('w-e-active');\n                    $content.show();\n                });\n            });\n\n            // 绑定关闭事件\n            $container.on('click', function (e) {\n                // 点击时阻止冒泡\n                e.stopPropagation();\n            });\n            $body.on('click', function (e) {\n                _this.hide();\n            });\n\n            // 添加到 DOM\n            $textContainerElem.append($container);\n\n            // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n            tabs.forEach(function (tab, index) {\n                if (!tab) {\n                    return;\n                }\n                var events = tab.events || [];\n                events.forEach(function (event) {\n                    var selector = event.selector;\n                    var type = event.type;\n                    var fn = event.fn || emptyFn;\n                    var $content = tabContentArr[index];\n                    $content.find(selector).on(type, function (e) {\n                        e.stopPropagation();\n                        var needToHide = fn(e);\n                        // 执行完事件之后，是否要关闭 panel\n                        if (needToHide) {\n                            _this.hide();\n                        }\n                    });\n                });\n            });\n\n            // focus 第一个 elem\n            var $inputs = $container.find('input[type=text],textarea');\n            if ($inputs.length) {\n                $inputs.get(0).focus();\n            }\n\n            // 添加到属性\n            this.$container = $container;\n\n            // 隐藏其他 panel\n            this._hideOtherPanels();\n            // 记录该 menu 已经创建了 panel\n            _isCreatedPanelMenus.push(menu);\n        },\n\n        // 隐藏（移除DOM）\n        hide: function hide() {\n            var menu = this.menu;\n            var $container = this.$container;\n            if ($container) {\n                $container.remove();\n            }\n\n            // 将该 menu 记录中移除\n            _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n                if (item === menu) {\n                    return false;\n                } else {\n                    return true;\n                }\n            });\n        },\n\n        // 一个 panel 展示时，隐藏其他 panel\n        _hideOtherPanels: function _hideOtherPanels() {\n            if (!_isCreatedPanelMenus.length) {\n                return;\n            }\n            _isCreatedPanelMenus.forEach(function (menu) {\n                var panel = menu.panel || {};\n                if (panel.hide) {\n                    panel.hide();\n                }\n            });\n        }\n    };\n\n    /*\n    menu - link\n*/\n\n// 构造函数\n    function Link(editor) {\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"icon-link\"></i></div>');\n        this.type = 'panel';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n// 原型\n    Link.prototype = {\n        constructor: Link,\n\n        // 点击事件\n        onClick: function onClick(e) {\n            var editor = this.editor;\n            var $linkelem = void 0;\n\n            if (this._active) {\n                // 当前选区在链接里面\n                $linkelem = editor.selection.getSelectionContainerElem();\n                if (!$linkelem) {\n                    return;\n                }\n                // 将该元素都包含在选取之内，以便后面整体替换\n                editor.selection.createRangeByElem($linkelem);\n                editor.selection.restoreSelection();\n                // 显示 panel\n                this._createPanel($linkelem.text(), $linkelem.attr('href'));\n            } else {\n                // 当前选区不在链接里面\n                if (editor.selection.isSelectionEmpty()) {\n                    // 选区是空的，未选中内容\n                    this._createPanel('', '');\n                } else {\n                    // 选中内容了\n                    this._createPanel(editor.selection.getSelectionText(), '');\n                }\n            }\n        },\n\n        // 创建 panel\n        _createPanel: function _createPanel(text, link) {\n            var _this = this;\n\n            // panel 中需要用到的id\n            var inputLinkId = getRandom('input-link');\n            var inputTextId = getRandom('input-text');\n            var btnOkId = getRandom('btn-ok');\n            var btnDelId = getRandom('btn-del');\n\n            // 是否显示“删除链接”\n            var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n            // 初始化并显示 panel\n            var panel = new Panel(this, {\n                width: 300,\n                // panel 中可包含多个 tab\n                tabs: [{\n                    // tab 的标题\n                    title: '链接',\n                    // 模板\n                    tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                    // 事件绑定\n                    events: [\n                        // 插入链接\n                        {\n                            selector: '#' + btnOkId,\n                            type: 'click',\n                            fn: function fn() {\n                                // 执行插入链接\n                                var $link = $('#' + inputLinkId);\n                                var $text = $('#' + inputTextId);\n                                var link = $link.val();\n                                var text = $text.val();\n                                _this._insertLink(text, link);\n\n                                // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                                return true;\n                            }\n                        },\n                        // 删除链接\n                        {\n                            selector: '#' + btnDelId,\n                            type: 'click',\n                            fn: function fn() {\n                                // 执行删除链接\n                                _this._delLink();\n\n                                // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                                return true;\n                            }\n                        }]\n                } // tab end\n                ] // tabs end\n            });\n\n            // 显示 panel\n            panel.show();\n\n            // 记录属性\n            this.panel = panel;\n        },\n\n        // 删除当前链接\n        _delLink: function _delLink() {\n            if (!this._active) {\n                return;\n            }\n            var editor = this.editor;\n            var $selectionELem = editor.selection.getSelectionContainerElem();\n            if (!$selectionELem) {\n                return;\n            }\n            var selectionText = editor.selection.getSelectionText();\n            editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n        },\n\n        // 插入链接\n        _insertLink: function _insertLink(text, link) {\n            var editor = this.editor;\n            var config = editor.config;\n            var linkCheck = config.linkCheck;\n            var checkResult = true; // 默认为 true\n            if (linkCheck && typeof linkCheck === 'function') {\n                checkResult = linkCheck(text, link);\n            }\n            if (checkResult === true) {\n                editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n            } else {\n                alert(checkResult);\n            }\n        },\n\n        // 试图改变 active 状态\n        tryChangeActive: function tryChangeActive(e) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            var $selectionELem = editor.selection.getSelectionContainerElem();\n            if (!$selectionELem) {\n                return;\n            }\n            if ($selectionELem.getNodeName() === 'A') {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    };\n\n    /*\n    italic-menu\n*/\n\n// 构造函数\n    function Italic(editor) {\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"icon-italic\"></i>\\n        </div>');\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n// 原型\n    Italic.prototype = {\n        constructor: Italic,\n\n        // 点击事件\n        onClick: function onClick(e) {\n            // 点击菜单将触发这里\n\n            var editor = this.editor;\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n            if (isSeleEmpty) {\n                // 选区是空的，插入并选中一个“空白”\n                editor.selection.createEmptyRange();\n            }\n\n            // 执行 italic 命令\n            editor.cmd.do('italic');\n\n            if (isSeleEmpty) {\n                // 需要将选取折叠起来\n                editor.selection.collapseRange();\n                editor.selection.restoreSelection();\n            }\n        },\n\n        // 试图改变 active 状态\n        tryChangeActive: function tryChangeActive(e) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            if (editor.cmd.queryCommandState('italic')) {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    };\n\n    /*\n    redo-menu\n*/\n\n// 构造函数\n    function Redo(editor) {\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"icon-redo\"></i>\\n        </div>');\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n// 原型\n    Redo.prototype = {\n        constructor: Redo,\n\n        // 点击事件\n        onClick: function onClick(e) {\n            // 点击菜单将触发这里\n\n            var editor = this.editor;\n\n            // 执行 redo 命令\n            editor.cmd.do('redo');\n        }\n    };\n\n    /*\n    strikeThrough-menu\n*/\n\n// 构造函数\n    function StrikeThrough(editor) {\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"icon-strikethrough\"></i>\\n        </div>');\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n// 原型\n    StrikeThrough.prototype = {\n        constructor: StrikeThrough,\n\n        // 点击事件\n        onClick: function onClick(e) {\n            // 点击菜单将触发这里\n\n            var editor = this.editor;\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n            if (isSeleEmpty) {\n                // 选区是空的，插入并选中一个“空白”\n                editor.selection.createEmptyRange();\n            }\n\n            // 执行 strikeThrough 命令\n            editor.cmd.do('strikeThrough');\n\n            if (isSeleEmpty) {\n                // 需要将选取折叠起来\n                editor.selection.collapseRange();\n                editor.selection.restoreSelection();\n            }\n        },\n\n        // 试图改变 active 状态\n        tryChangeActive: function tryChangeActive(e) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            if (editor.cmd.queryCommandState('strikeThrough')) {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    };\n\n    /*\n    underline-menu\n*/\n\n// 构造函数\n    function Underline(editor) {\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"icon-underline\"></i>\\n        </div>');\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n// 原型\n    Underline.prototype = {\n        constructor: Underline,\n\n        // 点击事件\n        onClick: function onClick(e) {\n            // 点击菜单将触发这里\n\n            var editor = this.editor;\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n            if (isSeleEmpty) {\n                // 选区是空的，插入并选中一个“空白”\n                editor.selection.createEmptyRange();\n            }\n\n            // 执行 underline 命令\n            editor.cmd.do('underline');\n\n            if (isSeleEmpty) {\n                // 需要将选取折叠起来\n                editor.selection.collapseRange();\n                editor.selection.restoreSelection();\n            }\n        },\n\n        // 试图改变 active 状态\n        tryChangeActive: function tryChangeActive(e) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            if (editor.cmd.queryCommandState('underline')) {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    };\n\n    /*\n    undo-menu\n*/\n\n// 构造函数\n    function Undo(editor) {\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"icon-undo\"></i>\\n        </div>');\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n// 原型\n    Undo.prototype = {\n        constructor: Undo,\n\n        // 点击事件\n        onClick: function onClick(e) {\n            // 点击菜单将触发这里\n\n            var editor = this.editor;\n\n            // 执行 undo 命令\n            editor.cmd.do('undo');\n        }\n    };\n\n    /*\n    menu - list\n*/\n\n// 构造函数\n    function List(editor) {\n        var _this = this;\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"icon-unorderedlist\"></i></div>');\n        this.type = 'droplist';\n\n        // 当前是否 active 状态\n        this._active = false;\n\n        // 初始化 droplist\n        this.droplist = new DropList(this, {\n            width: 120,\n            $title: $('<p>设置列表</p>'),\n            type: 'list', // droplist 以列表形式展示\n            list: [{\n                $elem: $('<span><i class=\"icon-orderedlist\"></i> 有序列表</span>'),\n                value: 'insertOrderedList'\n            }, {$elem: $('<span><i class=\"icon-unorderedlist\"></i> 无序列表</span>'), value: 'insertUnorderedList'}],\n            onClick: function onClick(value) {\n                // 注意 this 是指向当前的 List 对象\n                _this._command(value);\n            }\n        });\n    }\n\n// 原型\n    List.prototype = {\n        constructor: List,\n\n        // 执行命令\n        _command: function _command(value) {\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n            editor.selection.restoreSelection();\n            if (editor.cmd.queryCommandState(value)) {\n                return;\n            }\n            editor.cmd.do(value);\n\n            // 验证列表是否被包裹在 <p> 之内\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if ($selectionElem.getNodeName() === 'LI') {\n                $selectionElem = $selectionElem.parent();\n            }\n            if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n                return;\n            }\n            if ($selectionElem.equal($textElem)) {\n                // 证明是顶级标签，没有被 <p> 包裹\n                return;\n            }\n            var $parent = $selectionElem.parent();\n            if ($parent.equal($textElem)) {\n                // $parent 是顶级标签，不能删除\n                return;\n            }\n\n            $selectionElem.insertAfter($parent);\n            $parent.remove();\n        },\n\n        // 试图改变 active 状态\n        tryChangeActive: function tryChangeActive(e) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    };\n\n    /*\n    menu - justify\n*/\n\n// 构造函数\n    function Justify(editor) {\n        var _this = this;\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"icon-align-left\"></i></div>');\n        this.type = 'droplist';\n\n        // 当前是否 active 状态\n        this._active = false;\n\n        // 初始化 droplist\n        this.droplist = new DropList(this, {\n            width: 100,\n            $title: $('<p>对齐方式</p>'),\n            type: 'list', // droplist 以列表形式展示\n            list: [{$elem: $('<span><i class=\"icon-align-left\"></i> 靠左</span>'), value: 'justifyLeft'},\n                {$elem: $('<span><i class=\"icon-align-center\"></i> 居中</span>'), value: 'justifyCenter'},\n                {$elem: $('<span><i class=\"icon-align-right\"></i> 靠右</span>'), value: 'justifyRight'}],\n            onClick: function onClick(value) {\n                // 注意 this 是指向当前的 List 对象\n                _this._command(value);\n            }\n        });\n    }\n\n// 原型\n    Justify.prototype = {\n        constructor: Justify,\n\n        // 执行命令\n        _command: function _command(value) {\n            var editor = this.editor;\n            editor.cmd.do(value);\n        }\n    };\n\n    /*\n    menu - Forecolor\n*/\n\n// 构造函数\n    function ForeColor(editor) {\n        var _this = this;\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"icon-font-colors\"></i></div>');\n        this.type = 'droplist';\n\n        // 获取配置的颜色\n        var config = editor.config;\n        var colors = config.colors || [];\n\n        // 当前是否 active 状态\n        this._active = false;\n\n        // 初始化 droplist\n        this.droplist = new DropList(this, {\n            width: 120,\n            $title: $('<p>文字颜色</p>'),\n            type: 'inline-block', // droplist 内容以 block 形式展示\n            list: colors.map(function (color) {\n                if (color === '#ffffff') {\n                    return {\n                        $elem: $('<span style=\"background-color:' + color + ';border:1px solid #e8e8e8\" class=\"color-block\"></span>'),\n                        value: color\n                    };\n                } else {\n                    return {\n                        $elem: $('<span style=\"background-color:' + color + ';\" class=\"color-block\"></span>'),\n                        value: color\n                    };\n                }\n            }),\n            onClick: function onClick(value) {\n                // 注意 this 是指向当前的 ForeColor 对象\n                _this._command(value);\n            }\n        });\n    }\n\n// 原型\n    ForeColor.prototype = {\n        constructor: ForeColor,\n\n        // 执行命令\n        _command: function _command(value) {\n            var editor = this.editor;\n            editor.cmd.do('foreColor', value);\n        }\n    };\n\n    /*\n    menu - BackColor\n*/\n\n// 构造函数\n    function BackColor(editor) {\n        var _this = this;\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"icon-bg-colors\"></i></div>');\n        this.type = 'droplist';\n\n        // 获取配置的颜色\n        var config = editor.config;\n        var colors = config.colors || [];\n\n        // 当前是否 active 状态\n        this._active = false;\n\n        // 初始化 droplist\n        this.droplist = new DropList(this, {\n            width: 120,\n            $title: $('<p>背景色</p>'),\n            type: 'inline-block', // droplist 内容以 block 形式展示\n            list: colors.map(function (color) {\n                if (color === '#ffffff') {\n                    return {\n                        $elem: $('<span style=\"background-color:' + color + ';border:1px solid #e8e8e8\" class=\"color-block\"></span>'),\n                        value: color\n                    };\n                } else {\n                    return {\n                        $elem: $('<span style=\"background-color:' + color + ';\" class=\"color-block\"></span>'),\n                        value: color\n                    };\n                }\n\n            }),\n            onClick: function onClick(value) {\n                // 注意 this 是指向当前的 BackColor 对象\n                _this._command(value);\n            }\n        });\n    }\n\n// 原型\n    BackColor.prototype = {\n        constructor: BackColor,\n\n        // 执行命令\n        _command: function _command(value) {\n            var editor = this.editor;\n            editor.cmd.do('backColor', value);\n        }\n    };\n\n    /*\n    menu - quote\n*/\n\n// 构造函数\n    function Quote(editor) {\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"icon-block\"></i>\\n        </div>');\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n// 原型\n    Quote.prototype = {\n        constructor: Quote,\n\n        onClick: function onClick(e) {\n            var editor = this.editor;\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var nodeName = $selectionElem.getNodeName();\n\n            if (!UA.isIE()) {\n                if (nodeName === 'BLOCKQUOTE') {\n                    // 撤销 quote\n                    editor.cmd.do('formatBlock', '<P>');\n                } else {\n                    // 转换为 quote\n                    editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n                }\n                return;\n            }\n\n            // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n            var content = void 0,\n                $targetELem = void 0;\n            if (nodeName === 'P') {\n                // 将 P 转换为 quote\n                content = $selectionElem.text();\n                $targetELem = $('<blockquote>' + content + '</blockquote>');\n                $targetELem.insertAfter($selectionElem);\n                $selectionElem.remove();\n                return;\n            }\n            if (nodeName === 'BLOCKQUOTE') {\n                // 撤销 quote\n                content = $selectionElem.text();\n                $targetELem = $('<p>' + content + '</p>');\n                $targetELem.insertAfter($selectionElem);\n                $selectionElem.remove();\n            }\n        },\n\n        tryChangeActive: function tryChangeActive(e) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            var reg = /^BLOCKQUOTE$/i;\n            var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n            if (reg.test(cmdValue)) {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    };\n\n    /*\n    menu - code\n*/\n\n// 构造函数\n    function Code(editor) {\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"icon-code\"></i>\\n        </div>');\n        this.type = 'panel';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n// 原型\n    Code.prototype = {\n        constructor: Code,\n\n        onClick: function onClick(e) {\n            var editor = this.editor;\n            var $startElem = editor.selection.getSelectionStartElem();\n            var $endElem = editor.selection.getSelectionEndElem();\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\n            var selectionText = editor.selection.getSelectionText();\n            var $code = void 0;\n\n            if (!$startElem.equal($endElem)) {\n                // 跨元素选择，不做处理\n                editor.selection.restoreSelection();\n                return;\n            }\n            if (!isSeleEmpty) {\n                // 选取不是空，用 <code> 包裹即可\n                $code = $('<code>' + selectionText + '</code>');\n                editor.cmd.do('insertElem', $code);\n                editor.selection.createRangeByElem($code, false);\n                editor.selection.restoreSelection();\n                return;\n            }\n\n            // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n            if (this._active) {\n                // 选中状态，将编辑内容\n                this._createPanel($startElem.html());\n            } else {\n                // 未选中状态，将创建内容\n                this._createPanel();\n            }\n        },\n\n        _createPanel: function _createPanel(value) {\n            var _this = this;\n\n            // value - 要编辑的内容\n            value = value || '';\n            var type = !value ? 'new' : 'edit';\n            var textId = getRandom('texxt');\n            var btnId = getRandom('btn');\n\n            var panel = new Panel(this, {\n                width: 500,\n                // 一个 Panel 包含多个 tab\n                tabs: [{\n                    // 标题\n                    title: '插入代码',\n                    // 模板\n                    tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                    // 事件绑定\n                    events: [\n                        // 插入代码\n                        {\n                            selector: '#' + btnId,\n                            type: 'click',\n                            fn: function fn() {\n                                var $text = $('#' + textId);\n                                var text = $text.val() || $text.html();\n                                text = replaceHtmlSymbol(text);\n                                if (type === 'new') {\n                                    // 新插入\n                                    _this._insertCode(text);\n                                } else {\n                                    // 编辑更新\n                                    _this._updateCode(text);\n                                }\n\n                                // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                                return true;\n                            }\n                        }]\n                } // first tab end\n                ] // tabs end\n            }); // new Panel end\n\n            // 显示 panel\n            panel.show();\n\n            // 记录属性\n            this.panel = panel;\n        },\n\n        // 插入代码\n        _insertCode: function _insertCode(value) {\n            var editor = this.editor;\n            editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n        },\n\n        // 更新代码\n        _updateCode: function _updateCode(value) {\n            var editor = this.editor;\n            var $selectionELem = editor.selection.getSelectionContainerElem();\n            if (!$selectionELem) {\n                return;\n            }\n            $selectionELem.html(value);\n            editor.selection.restoreSelection();\n        },\n\n        // 试图改变 active 状态\n        tryChangeActive: function tryChangeActive(e) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            var $selectionELem = editor.selection.getSelectionContainerElem();\n            if (!$selectionELem) {\n                return;\n            }\n            var $parentElem = $selectionELem.parent();\n            if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    };\n\n    /*\n    menu - emoticon\n*/\n\n// 构造函数\n    function Emoticon(editor) {\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"icon-smile\"></i>\\n        </div>');\n        this.type = 'panel';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n// 原型\n    Emoticon.prototype = {\n        constructor: Emoticon,\n\n        onClick: function onClick() {\n            this._createPanel();\n        },\n\n        _createPanel: function _createPanel() {\n            var _this = this;\n\n            var editor = this.editor;\n            var config = editor.config;\n            // 获取表情配置\n            var emotions = config.emotions || [];\n\n            // 创建表情 dropPanel 的配置\n            var tabConfig = [];\n            emotions.forEach(function (emotData) {\n                var emotType = emotData.type;\n                var content = emotData.content || [];\n\n                // 这一组表情最终拼接出来的 html\n                var faceHtml = '';\n\n                // emoji 表情\n                if (emotType === 'emoji') {\n                    content.forEach(function (item) {\n                        if (item) {\n                            faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n                        }\n                    });\n                }\n                // 图片表情\n                if (emotType === 'image') {\n                    content.forEach(function (item) {\n                        var src = item.src;\n                        var alt = item.alt;\n                        if (src) {\n                            // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                            faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n                        }\n                    });\n                }\n\n                tabConfig.push({\n                    title: emotData.title,\n                    tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                    events: [{\n                        selector: 'span.w-e-item',\n                        type: 'click',\n                        fn: function fn(e) {\n                            var target = e.target;\n                            var $target = $(target);\n                            var nodeName = $target.getNodeName();\n\n                            var insertHtml = void 0;\n                            if (nodeName === 'IMG') {\n                                // 插入图片\n                                insertHtml = $target.parent().html();\n                            } else {\n                                // 插入 emoji\n                                insertHtml = '<span>' + $target.html() + '</span>';\n                            }\n\n                            _this._insert(insertHtml);\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }]\n                });\n            });\n\n            var panel = new Panel(this, {\n                width: 300,\n                height: 200,\n                // 一个 Panel 包含多个 tab\n                tabs: tabConfig\n            });\n\n            // 显示 panel\n            panel.show();\n\n            // 记录属性\n            this.panel = panel;\n        },\n\n        // 插入表情\n        _insert: function _insert(emotHtml) {\n            var editor = this.editor;\n            editor.cmd.do('insertHTML', emotHtml);\n        }\n    };\n\n    /*\n    menu - table\n*/\n\n// 构造函数\n    function Table(editor) {\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"icon-table\"></i></div>');\n        this.type = 'panel';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n// 原型\n    Table.prototype = {\n        constructor: Table,\n\n        onClick: function onClick() {\n            if (this._active) {\n                // 编辑现有表格\n                this._createEditPanel();\n            } else {\n                // 插入新表格\n                this._createInsertPanel();\n            }\n        },\n\n        // 创建插入新表格的 panel\n        _createInsertPanel: function _createInsertPanel() {\n            var _this = this;\n\n            // 用到的 id\n            var btnInsertId = getRandom('btn');\n            var textRowNum = getRandom('row');\n            var textColNum = getRandom('col');\n\n            var panel = new Panel(this, {\n                width: 250,\n                // panel 包含多个 tab\n                tabs: [{\n                    // 标题\n                    title: '插入表格',\n                    // 模板\n                    tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                    // 事件绑定\n                    events: [{\n                        // 点击按钮，插入表格\n                        selector: '#' + btnInsertId,\n                        type: 'click',\n                        fn: function fn() {\n                            var rowNum = parseInt($('#' + textRowNum).val());\n                            var colNum = parseInt($('#' + textColNum).val());\n\n                            if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                                // form 数据有效\n                                _this._insert(rowNum, colNum);\n                            }\n\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }]\n                } // first tab end\n                ] // tabs end\n            }); // panel end\n\n            // 展示 panel\n            panel.show();\n\n            // 记录属性\n            this.panel = panel;\n        },\n\n        // 插入表格\n        _insert: function _insert(rowNum, colNum) {\n            // 拼接 table 模板\n            var r = void 0,\n                c = void 0;\n            var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n            for (r = 0; r < rowNum; r++) {\n                html += '<tr>';\n                if (r === 0) {\n                    for (c = 0; c < colNum; c++) {\n                        html += '<th>&nbsp;</th>';\n                    }\n                } else {\n                    for (c = 0; c < colNum; c++) {\n                        html += '<td>&nbsp;</td>';\n                    }\n                }\n                html += '</tr>';\n            }\n            html += '</table><p><br></p>';\n\n            // 执行命令\n            var editor = this.editor;\n            editor.cmd.do('insertHTML', html);\n\n            // 防止 firefox 下出现 resize 的控制点\n            editor.cmd.do('enableObjectResizing', false);\n            editor.cmd.do('enableInlineTableEditing', false);\n        },\n\n        // 创建编辑表格的 panel\n        _createEditPanel: function _createEditPanel() {\n            var _this2 = this;\n\n            // 可用的 id\n            var addRowBtnId = getRandom('add-row');\n            var addColBtnId = getRandom('add-col');\n            var delRowBtnId = getRandom('del-row');\n            var delColBtnId = getRandom('del-col');\n            var delTableBtnId = getRandom('del-table');\n\n            // 创建 panel 对象\n            var panel = new Panel(this, {\n                width: 320,\n                // panel 包含多个 tab\n                tabs: [{\n                    // 标题\n                    title: '编辑表格',\n                    // 模板\n                    tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                    // 事件绑定\n                    events: [{\n                        // 增加行\n                        selector: '#' + addRowBtnId,\n                        type: 'click',\n                        fn: function fn() {\n                            _this2._addRow();\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }, {\n                        // 增加列\n                        selector: '#' + addColBtnId,\n                        type: 'click',\n                        fn: function fn() {\n                            _this2._addCol();\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }, {\n                        // 删除行\n                        selector: '#' + delRowBtnId,\n                        type: 'click',\n                        fn: function fn() {\n                            _this2._delRow();\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }, {\n                        // 删除列\n                        selector: '#' + delColBtnId,\n                        type: 'click',\n                        fn: function fn() {\n                            _this2._delCol();\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }, {\n                        // 删除表格\n                        selector: '#' + delTableBtnId,\n                        type: 'click',\n                        fn: function fn() {\n                            _this2._delTable();\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }]\n                }]\n            });\n            // 显示 panel\n            panel.show();\n        },\n\n        // 获取选中的单元格的位置信息\n        _getLocationData: function _getLocationData() {\n            var result = {};\n            var editor = this.editor;\n            var $selectionELem = editor.selection.getSelectionContainerElem();\n            if (!$selectionELem) {\n                return;\n            }\n            var nodeName = $selectionELem.getNodeName();\n            if (nodeName !== 'TD' && nodeName !== 'TH') {\n                return;\n            }\n\n            // 获取 td index\n            var $tr = $selectionELem.parent();\n            var $tds = $tr.children();\n            var tdLength = $tds.length;\n            $tds.forEach(function (td, index) {\n                if (td === $selectionELem[0]) {\n                    // 记录并跳出循环\n                    result.td = {\n                        index: index,\n                        elem: td,\n                        length: tdLength\n                    };\n                    return false;\n                }\n            });\n\n            // 获取 tr index\n            var $tbody = $tr.parent();\n            var $trs = $tbody.children();\n            var trLength = $trs.length;\n            $trs.forEach(function (tr, index) {\n                if (tr === $tr[0]) {\n                    // 记录并跳出循环\n                    result.tr = {\n                        index: index,\n                        elem: tr,\n                        length: trLength\n                    };\n                    return false;\n                }\n            });\n\n            // 返回结果\n            return result;\n        },\n\n        // 增加行\n        _addRow: function _addRow() {\n            // 获取当前单元格的位置信息\n            var locationData = this._getLocationData();\n            if (!locationData) {\n                return;\n            }\n            var trData = locationData.tr;\n            var $currentTr = $(trData.elem);\n            var tdData = locationData.td;\n            var tdLength = tdData.length;\n\n            // 拼接即将插入的字符串\n            var newTr = document.createElement('tr');\n            var tpl = '',\n                i = void 0;\n            for (i = 0; i < tdLength; i++) {\n                tpl += '<td>&nbsp;</td>';\n            }\n            newTr.innerHTML = tpl;\n            // 插入\n            $(newTr).insertAfter($currentTr);\n        },\n\n        // 增加列\n        _addCol: function _addCol() {\n            // 获取当前单元格的位置信息\n            var locationData = this._getLocationData();\n            if (!locationData) {\n                return;\n            }\n            var trData = locationData.tr;\n            var tdData = locationData.td;\n            var tdIndex = tdData.index;\n            var $currentTr = $(trData.elem);\n            var $trParent = $currentTr.parent();\n            var $trs = $trParent.children();\n\n            // 遍历所有行\n            $trs.forEach(function (tr) {\n                var $tr = $(tr);\n                var $tds = $tr.children();\n                var $currentTd = $tds.get(tdIndex);\n                var name = $currentTd.getNodeName().toLowerCase();\n\n                // new 一个 td，并插入\n                var newTd = document.createElement(name);\n                $(newTd).insertAfter($currentTd);\n            });\n        },\n\n        // 删除行\n        _delRow: function _delRow() {\n            // 获取当前单元格的位置信息\n            var locationData = this._getLocationData();\n            if (!locationData) {\n                return;\n            }\n            var trData = locationData.tr;\n            var $currentTr = $(trData.elem);\n            $currentTr.remove();\n        },\n\n        // 删除列\n        _delCol: function _delCol() {\n            // 获取当前单元格的位置信息\n            var locationData = this._getLocationData();\n            if (!locationData) {\n                return;\n            }\n            var trData = locationData.tr;\n            var tdData = locationData.td;\n            var tdIndex = tdData.index;\n            var $currentTr = $(trData.elem);\n            var $trParent = $currentTr.parent();\n            var $trs = $trParent.children();\n\n            // 遍历所有行\n            $trs.forEach(function (tr) {\n                var $tr = $(tr);\n                var $tds = $tr.children();\n                var $currentTd = $tds.get(tdIndex);\n                // 删除\n                $currentTd.remove();\n            });\n        },\n\n        // 删除表格\n        _delTable: function _delTable() {\n            var editor = this.editor;\n            var $selectionELem = editor.selection.getSelectionContainerElem();\n            if (!$selectionELem) {\n                return;\n            }\n            var $table = $selectionELem.parentUntil('table');\n            if (!$table) {\n                return;\n            }\n            $table.remove();\n        },\n\n        // 试图改变 active 状态\n        tryChangeActive: function tryChangeActive(e) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            var $selectionELem = editor.selection.getSelectionContainerElem();\n            if (!$selectionELem) {\n                return;\n            }\n            var nodeName = $selectionELem.getNodeName();\n            if (nodeName === 'TD' || nodeName === 'TH') {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    };\n\n    /*\n    menu - video\n*/\n\n// 构造函数\n    function Video(editor) {\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"icon-video\"></i></div>');\n        this.type = 'panel';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n// 原型\n    Video.prototype = {\n        constructor: Video,\n\n        onClick: function onClick() {\n            this._createPanel();\n        },\n\n        _createPanel: function _createPanel() {\n            var _this = this;\n\n            // 创建 id\n            var textValId = getRandom('text-val');\n            var btnId = getRandom('btn');\n\n            // 创建 panel\n            var panel = new Panel(this, {\n                width: 350,\n                // 一个 panel 多个 tab\n                tabs: [{\n                    // 标题\n                    title: '插入视频',\n                    // 模板\n                    tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                    // 事件绑定\n                    events: [{\n                        selector: '#' + btnId,\n                        type: 'click',\n                        fn: function fn() {\n                            var $text = $('#' + textValId);\n                            var val = $text.val().trim();\n\n                            // 测试用视频地址\n                            // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                            if (val) {\n                                // 插入视频\n                                _this._insert(val);\n                            }\n\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }]\n                } // first tab end\n                ] // tabs end\n            }); // panel end\n\n            // 显示 panel\n            panel.show();\n\n            // 记录属性\n            this.panel = panel;\n        },\n\n        // 插入视频\n        _insert: function _insert(val) {\n            var editor = this.editor;\n            editor.cmd.do('insertHTML', val + '<p><br></p>');\n        }\n    };\n\n    /*\n    menu - img\n*/\n\n// 构造函数\n    function Image(editor) {\n        this.editor = editor;\n        var imgMenuId = getRandom('w-e-img');\n        this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"icon-image\"></i></div>');\n        editor.imgMenuId = imgMenuId;\n        this.type = 'panel';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n// 原型\n    Image.prototype = {\n        constructor: Image,\n\n        onClick: function onClick() {\n            var editor = this.editor;\n            var config = editor.config;\n            if (config.qiniu) {\n                return;\n            }\n            if (this._active) {\n                this._createEditPanel();\n            } else {\n                this._createInsertPanel();\n            }\n        },\n\n        _createEditPanel: function _createEditPanel() {\n            var editor = this.editor;\n\n            // id\n            var width30 = getRandom('width-30');\n            var width50 = getRandom('width-50');\n            var width100 = getRandom('width-100');\n            var delBtn = getRandom('del-btn');\n\n            // tab 配置\n            var tabsConfig = [{\n                title: '编辑图片',\n                tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n                events: [{\n                    selector: '#' + width30,\n                    type: 'click',\n                    fn: function fn() {\n                        var $img = editor._selectedImg;\n                        if ($img) {\n                            $img.css('max-width', '30%');\n                        }\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    selector: '#' + width50,\n                    type: 'click',\n                    fn: function fn() {\n                        var $img = editor._selectedImg;\n                        if ($img) {\n                            $img.css('max-width', '50%');\n                        }\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    selector: '#' + width100,\n                    type: 'click',\n                    fn: function fn() {\n                        var $img = editor._selectedImg;\n                        if ($img) {\n                            $img.css('max-width', '100%');\n                        }\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    selector: '#' + delBtn,\n                    type: 'click',\n                    fn: function fn() {\n                        var $img = editor._selectedImg;\n                        if ($img) {\n                            $img.remove();\n                        }\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }];\n\n            // 创建 panel 并显示\n            var panel = new Panel(this, {\n                width: 300,\n                tabs: tabsConfig\n            });\n            panel.show();\n\n            // 记录属性\n            this.panel = panel;\n        },\n\n        _createInsertPanel: function _createInsertPanel() {\n            var editor = this.editor;\n            var uploadImg = editor.uploadImg;\n            var config = editor.config;\n\n            // id\n            var upTriggerId = getRandom('up-trigger');\n            var upFileId = getRandom('up-file');\n            var linkUrlId = getRandom('link-url');\n            var linkBtnId = getRandom('link-btn');\n\n            // tabs 的配置\n            var tabsConfig = [{\n                title: '上传图片',\n                tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"icon-cloud-upload\"></i>\\n <div class=\"upload-text\">&#35831;&#36873;&#25321;&#22270;&#29255;&#24320;&#22987;&#19978;&#20256;</div>                   </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n                events: [{\n                    // 触发选择图片\n                    selector: '#' + upTriggerId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $file = $('#' + upFileId);\n                        var fileElem = $file[0];\n                        if (fileElem) {\n                            fileElem.click();\n                        } else {\n                            // 返回 true 可关闭 panel\n                            return true;\n                        }\n                    }\n                }, {\n                    // 选择图片完毕\n                    selector: '#' + upFileId,\n                    type: 'change',\n                    fn: function fn() {\n                        var $file = $('#' + upFileId);\n                        var fileElem = $file[0];\n                        if (!fileElem) {\n                            // 返回 true 可关闭 panel\n                            return true;\n                        }\n\n                        // 获取选中的 file 对象列表\n                        var fileList = fileElem.files;\n                        if (fileList.length) {\n                            uploadImg.uploadImg(fileList);\n                        }\n\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }]\n            }, // first tab end\n                {\n                    title: '网络图片',\n                    tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n                    events: [{\n                        selector: '#' + linkBtnId,\n                        type: 'click',\n                        fn: function fn() {\n                            var $linkUrl = $('#' + linkUrlId);\n                            var url = $linkUrl.val().trim();\n\n                            if (url) {\n                                uploadImg.insertLinkImg(url);\n                            }\n\n                            // 返回 true 表示函数执行结束之后关闭 panel\n                            return true;\n                        }\n                    }]\n                } // second tab end\n            ]; // tabs end\n\n            // 判断 tabs 的显示\n            var tabsConfigResult = [];\n            if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n                // 显示“上传图片”\n                tabsConfigResult.push(tabsConfig[0]);\n            }\n            if (config.showLinkImg) {\n                // 显示“网络图片”\n                tabsConfigResult.push(tabsConfig[1]);\n            }\n\n            // 创建 panel 并显示\n            var panel = new Panel(this, {\n                width: 300,\n                tabs: tabsConfigResult\n            });\n            panel.show();\n\n            // 记录属性\n            this.panel = panel;\n        },\n\n        // 试图改变 active 状态\n        tryChangeActive: function tryChangeActive(e) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            if (editor._selectedImg) {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    };\n\n    /*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\n    var MenuConstructors = {};\n\n    MenuConstructors.bold = Bold;\n\n    MenuConstructors.head = Head;\n\n    MenuConstructors.fontSize = FontSize;\n\n    MenuConstructors.fontName = FontName;\n\n    MenuConstructors.link = Link;\n\n    MenuConstructors.italic = Italic;\n\n    MenuConstructors.redo = Redo;\n\n    MenuConstructors.strikeThrough = StrikeThrough;\n\n    MenuConstructors.underline = Underline;\n\n    MenuConstructors.undo = Undo;\n\n    MenuConstructors.list = List;\n\n    MenuConstructors.justify = Justify;\n\n    MenuConstructors.foreColor = ForeColor;\n\n    MenuConstructors.backColor = BackColor;\n\n    MenuConstructors.quote = Quote;\n\n    MenuConstructors.code = Code;\n\n    MenuConstructors.emoticon = Emoticon;\n\n    MenuConstructors.table = Table;\n\n    MenuConstructors.video = Video;\n\n    MenuConstructors.image = Image;\n\n    /*\n    菜单集合\n*/\n\n// 构造函数\n    function Menus(editor) {\n        this.editor = editor;\n        this.menus = {};\n    }\n\n// 修改原型\n    Menus.prototype = {\n        constructor: Menus,\n\n        // 初始化菜单\n        init: function init() {\n            var _this = this;\n\n            var editor = this.editor;\n            var config = editor.config || {};\n            var configMenus = config.menus || []; // 获取配置中的菜单\n\n            // 根据配置信息，创建菜单\n            configMenus.forEach(function (menuKey) {\n                var MenuConstructor = MenuConstructors[menuKey];\n                if (MenuConstructor && typeof MenuConstructor === 'function') {\n                    // 创建单个菜单\n                    _this.menus[menuKey] = new MenuConstructor(editor);\n                }\n            });\n\n            // 添加到菜单栏\n            this._addToToolbar();\n\n            // 绑定事件\n            this._bindEvent();\n        },\n\n        // 添加到菜单栏\n        _addToToolbar: function _addToToolbar() {\n            var editor = this.editor;\n            var $toolbarElem = editor.$toolbarElem;\n            var menus = this.menus;\n            var config = editor.config;\n            // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n            var zIndex = config.zIndex + 1;\n            objForEach(menus, function (key, menu) {\n                var $elem = menu.$elem;\n                if ($elem) {\n                    // 设置 z-index\n                    $elem.css('z-index', zIndex);\n                    $toolbarElem.append($elem);\n                }\n            });\n        },\n\n        // 绑定菜单 click mouseenter 事件\n        _bindEvent: function _bindEvent() {\n            var menus = this.menus;\n            var editor = this.editor;\n            objForEach(menus, function (key, menu) {\n                var type = menu.type;\n                if (!type) {\n                    return;\n                }\n                var $elem = menu.$elem;\n                var droplist = menu.droplist;\n                var panel = menu.panel;\n\n                // 点击类型，例如 bold\n                if (type === 'click' && menu.onClick) {\n                    $elem.on('click', function (e) {\n                        if (editor.selection.getRange() == null) {\n                            return;\n                        }\n                        menu.onClick(e);\n                    });\n                }\n\n                // 下拉框，例如 head\n                if (type === 'droplist' && droplist) {\n                    $elem.on('mouseenter', function (e) {\n                        if (editor.selection.getRange() == null) {\n                            return;\n                        }\n                        // 显示\n                        droplist.showTimeoutId = setTimeout(function () {\n                            droplist.show();\n                        }, 200);\n                    }).on('mouseleave', function (e) {\n                        // 隐藏\n                        droplist.hideTimeoutId = setTimeout(function () {\n                            droplist.hide();\n                        }, 0);\n                    });\n                }\n\n                // 弹框类型，例如 link\n                if (type === 'panel' && menu.onClick) {\n                    $elem.on('click', function (e) {\n                        e.stopPropagation();\n                        if (editor.selection.getRange() == null) {\n                            return;\n                        }\n                        // 在自定义事件中显示 panel\n                        menu.onClick(e);\n                    });\n                }\n            });\n        },\n\n        // 尝试修改菜单状态\n        changeActive: function changeActive() {\n            var menus = this.menus;\n            objForEach(menus, function (key, menu) {\n                if (menu.tryChangeActive) {\n                    setTimeout(function () {\n                        menu.tryChangeActive();\n                    }, 100);\n                }\n            });\n        }\n    };\n\n    /*\n    粘贴信息的处理\n*/\n\n// 获取粘贴的纯文本\n    function getPasteText(e) {\n        var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n        var pasteText = void 0;\n        if (clipboardData == null) {\n            pasteText = window.clipboardData && window.clipboardData.getData('text');\n        } else {\n            pasteText = clipboardData.getData('text/plain');\n        }\n\n        return replaceHtmlSymbol(pasteText);\n    }\n\n// 获取粘贴的html\n    function getPasteHtml(e, filterStyle, ignoreImg) {\n        var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n        var pasteText = void 0,\n            pasteHtml = void 0;\n        if (clipboardData == null) {\n            pasteText = window.clipboardData && window.clipboardData.getData('text');\n        } else {\n            pasteText = clipboardData.getData('text/plain');\n            pasteHtml = clipboardData.getData('text/html');\n        }\n        if (!pasteHtml && pasteText) {\n            pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n        }\n        if (!pasteHtml) {\n            return;\n        }\n\n        // 过滤word中状态过来的无用字符\n        var docSplitHtml = pasteHtml.split('</html>');\n        if (docSplitHtml.length === 2) {\n            pasteHtml = docSplitHtml[0];\n        }\n\n        // 过滤无用标签\n        pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n        // 去掉注释\n        pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\n        // 过滤 data-xxx 属性\n        pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n        if (ignoreImg) {\n            // 忽略图片\n            pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n        }\n\n        if (filterStyle) {\n            // 过滤样式\n            pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n        } else {\n            // 保留样式\n            pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n        }\n\n        return pasteHtml;\n    }\n\n// 获取粘贴的图片文件\n    function getPasteImgs(e) {\n        var result = [];\n        var txt = getPasteText(e);\n        if (txt) {\n            // 有文字，就忽略图片\n            return result;\n        }\n\n        var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n        var items = clipboardData.items;\n        if (!items) {\n            return result;\n        }\n\n        objForEach(items, function (key, value) {\n            var type = value.type;\n            if (/image/i.test(type)) {\n                result.push(value.getAsFile());\n            }\n        });\n\n        return result;\n    }\n\n    /*\n    编辑区域\n*/\n\n// 获取一个 elem.childNodes 的 JSON 数据\n    function getChildrenJSON($elem) {\n        var result = [];\n        var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n        $children.forEach(function (curElem) {\n            var elemResult = void 0;\n            var nodeType = curElem.nodeType;\n\n            // 文本节点\n            if (nodeType === 3) {\n                elemResult = curElem.textContent;\n                elemResult = replaceHtmlSymbol(elemResult);\n            }\n\n            // 普通 DOM 节点\n            if (nodeType === 1) {\n                elemResult = {};\n\n                // tag\n                elemResult.tag = curElem.nodeName.toLowerCase();\n                // attr\n                var attrData = [];\n                var attrList = curElem.attributes || {};\n                var attrListLength = attrList.length || 0;\n                for (var i = 0; i < attrListLength; i++) {\n                    var attr = attrList[i];\n                    attrData.push({\n                        name: attr.name,\n                        value: attr.value\n                    });\n                }\n                elemResult.attrs = attrData;\n                // children（递归）\n                elemResult.children = getChildrenJSON($(curElem));\n            }\n\n            result.push(elemResult);\n        });\n        return result;\n    }\n\n// 构造函数\n    function Text(editor) {\n        this.editor = editor;\n    }\n\n// 修改原型\n    Text.prototype = {\n        constructor: Text,\n\n        // 初始化\n        init: function init() {\n            // 绑定事件\n            this._bindEvent();\n        },\n\n        // 清空内容\n        clear: function clear() {\n            this.html('<p><br></p>');\n        },\n\n        // 获取 设置 html\n        html: function html(val) {\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n            var html = void 0;\n            if (val == null) {\n                html = $textElem.html();\n                // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n                html = html.replace(/\\u200b/gm, '');\n                return html;\n            } else {\n                $textElem.html(val);\n\n                // 初始化选取，将光标定位到内容尾部\n                editor.initSelection();\n            }\n        },\n\n        // 获取 JSON\n        getJSON: function getJSON() {\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n            return getChildrenJSON($textElem);\n        },\n\n        // 获取 设置 text\n        text: function text(val) {\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n            var text = void 0;\n            if (val == null) {\n                text = $textElem.text();\n                // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n                text = text.replace(/\\u200b/gm, '');\n                return text;\n            } else {\n                $textElem.text('<p>' + val + '</p>');\n\n                // 初始化选取，将光标定位到内容尾部\n                editor.initSelection();\n            }\n        },\n\n        // 追加内容\n        append: function append(html) {\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n            $textElem.append($(html));\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        },\n\n        // 绑定事件\n        _bindEvent: function _bindEvent() {\n            // 实时保存选取\n            this._saveRangeRealTime();\n\n            // 按回车建时的特殊处理\n            this._enterKeyHandle();\n\n            // 清空时保留 <p><br></p>\n            this._clearHandle();\n\n            // 粘贴事件（粘贴文字，粘贴图片）\n            this._pasteHandle();\n\n            // tab 特殊处理\n            this._tabHandle();\n\n            // img 点击\n            this._imgHandle();\n\n            // 拖拽事件\n            this._dragHandle();\n        },\n\n        // 实时保存选取\n        _saveRangeRealTime: function _saveRangeRealTime() {\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n\n            // 保存当前的选区\n            function saveRange(e) {\n                // 随时保存选区\n                editor.selection.saveRange();\n                // 更新按钮 ative 状态\n                editor.menus.changeActive();\n            }\n\n            // 按键后保存\n            $textElem.on('keyup', saveRange);\n            $textElem.on('mousedown', function (e) {\n                // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n                $textElem.on('mouseleave', saveRange);\n            });\n            $textElem.on('mouseup', function (e) {\n                saveRange();\n                // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n                $textElem.off('mouseleave', saveRange);\n            });\n        },\n\n        // 按回车键时的特殊处理\n        _enterKeyHandle: function _enterKeyHandle() {\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n\n            function insertEmptyP($selectionElem) {\n                var $p = $('<p><br></p>');\n                $p.insertBefore($selectionElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n                $selectionElem.remove();\n            }\n\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            function pHandle(e) {\n                var $selectionElem = editor.selection.getSelectionContainerElem();\n                var $parentElem = $selectionElem.parent();\n\n                if ($parentElem.html() === '<code><br></code>') {\n                    // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n                    // 而且继续回车跳不出去，因此只能特殊处理\n                    insertEmptyP($selectionElem);\n                    return;\n                }\n\n                if (!$parentElem.equal($textElem)) {\n                    // 不是顶级标签\n                    return;\n                }\n\n                var nodeName = $selectionElem.getNodeName();\n                if (nodeName === 'P') {\n                    // 当前的标签是 P ，不用做处理\n                    return;\n                }\n\n                if ($selectionElem.text()) {\n                    // 有内容，不做处理\n                    return;\n                }\n\n                // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n                insertEmptyP($selectionElem);\n            }\n\n            $textElem.on('keyup', function (e) {\n                if (e.keyCode !== 13) {\n                    // 不是回车键\n                    return;\n                }\n                // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n                pHandle(e);\n            });\n\n            // <pre><code></code></pre> 回车时 特殊处理\n            function codeHandle(e) {\n                var $selectionElem = editor.selection.getSelectionContainerElem();\n                if (!$selectionElem) {\n                    return;\n                }\n                var $parentElem = $selectionElem.parent();\n                var selectionNodeName = $selectionElem.getNodeName();\n                var parentNodeName = $parentElem.getNodeName();\n\n                if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                    // 不符合要求 忽略\n                    return;\n                }\n\n                if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                    // 必须原生支持 insertHTML 命令\n                    return;\n                }\n\n                // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n                if (editor._willBreakCode === true) {\n                    // 此时可以跳出代码块\n                    // 插入 <p> ，并将选取定位到 <p>\n                    var $p = $('<p><br></p>');\n                    $p.insertAfter($parentElem);\n                    editor.selection.createRangeByElem($p, true);\n                    editor.selection.restoreSelection();\n\n                    // 修改状态\n                    editor._willBreakCode = false;\n\n                    e.preventDefault();\n                    return;\n                }\n\n                var _startOffset = editor.selection.getRange().startOffset;\n\n                // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n                editor.cmd.do('insertHTML', '\\n');\n                editor.selection.saveRange();\n                if (editor.selection.getRange().startOffset === _startOffset) {\n                    // 没起作用，再来一遍\n                    editor.cmd.do('insertHTML', '\\n');\n                }\n\n                var codeLength = $selectionElem.html().length;\n                if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                    // 说明光标在代码最后的位置，执行了回车操作\n                    // 记录下来，以便下次回车时候跳出 code\n                    editor._willBreakCode = true;\n                }\n\n                // 阻止默认行为\n                e.preventDefault();\n            }\n\n            $textElem.on('keydown', function (e) {\n                if (e.keyCode !== 13) {\n                    // 不是回车键\n                    // 取消即将跳转代码块的记录\n                    editor._willBreakCode = false;\n                    return;\n                }\n                // <pre><code></code></pre> 回车时 特殊处理\n                codeHandle(e);\n            });\n        },\n\n        // 清空时保留 <p><br></p>\n        _clearHandle: function _clearHandle() {\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n\n            $textElem.on('keydown', function (e) {\n                if (e.keyCode !== 8) {\n                    return;\n                }\n                var txtHtml = $textElem.html().toLowerCase().trim();\n                if (txtHtml === '<p><br></p>') {\n                    // 最后剩下一个空行，就不再删除了\n                    e.preventDefault();\n                    return;\n                }\n            });\n\n            $textElem.on('keyup', function (e) {\n                if (e.keyCode !== 8) {\n                    return;\n                }\n                var $p = void 0;\n                var txtHtml = $textElem.html().toLowerCase().trim();\n\n                // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n                if (!txtHtml || txtHtml === '<br>') {\n                    // 内容空了\n                    $p = $('<p><br/></p>');\n                    $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                    $textElem.append($p);\n                    editor.selection.createRangeByElem($p, false, true);\n                    editor.selection.restoreSelection();\n                }\n            });\n        },\n\n        // 粘贴事件（粘贴文字 粘贴图片）\n        _pasteHandle: function _pasteHandle() {\n            var editor = this.editor;\n            var config = editor.config;\n            var pasteFilterStyle = config.pasteFilterStyle;\n            var pasteTextHandle = config.pasteTextHandle;\n            var ignoreImg = config.pasteIgnoreImg;\n            var $textElem = editor.$textElem;\n\n            // 粘贴图片、文本的事件，每次只能执行一个\n            // 判断该次粘贴事件是否可以执行\n            var pasteTime = 0;\n\n            function canDo() {\n                var now = Date.now();\n                var flag = false;\n                if (now - pasteTime >= 100) {\n                    // 间隔大于 100 ms ，可以执行\n                    flag = true;\n                }\n                pasteTime = now;\n                return flag;\n            }\n\n            function resetTime() {\n                pasteTime = 0;\n            }\n\n            // 粘贴文字\n            $textElem.on('paste', function (e) {\n                if (UA.isIE()) {\n                    return;\n                } else {\n                    // 阻止默认行为，使用 execCommand 的粘贴命令\n                    e.preventDefault();\n                }\n\n                // 粘贴图片和文本，只能同时使用一个\n                if (!canDo()) {\n                    return;\n                }\n\n                // 获取粘贴的文字\n                var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n                var pasteText = getPasteText(e);\n                pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n                var $selectionElem = editor.selection.getSelectionContainerElem();\n                if (!$selectionElem) {\n                    return;\n                }\n                var nodeName = $selectionElem.getNodeName();\n\n                // code 中只能粘贴纯文本\n                if (nodeName === 'CODE' || nodeName === 'PRE') {\n                    if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                        // 用户自定义过滤处理粘贴内容\n                        pasteText = '' + (pasteTextHandle(pasteText) || '');\n                    }\n                    editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                    return;\n                }\n\n                // 先放开注释，有问题再追查 ————\n                // // 表格中忽略，可能会出现异常问题\n                // if (nodeName === 'TD' || nodeName === 'TH') {\n                //     return\n                // }\n\n                if (!pasteHtml) {\n                    // 没有内容，可继续执行下面的图片粘贴\n                    resetTime();\n                    return;\n                }\n                try {\n                    // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                    // 因此执行 insertHTML 会报错\n                    if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                        // 用户自定义过滤处理粘贴内容\n                        pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n                    }\n                    editor.cmd.do('insertHTML', pasteHtml);\n                } catch (ex) {\n                    // 此时使用 pasteText 来兼容一下\n                    if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                        // 用户自定义过滤处理粘贴内容\n                        pasteText = '' + (pasteTextHandle(pasteText) || '');\n                    }\n                    editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                }\n            });\n\n            // 粘贴图片\n            $textElem.on('paste', function (e) {\n                if (UA.isIE()) {\n                    return;\n                } else {\n                    e.preventDefault();\n                }\n\n                // 粘贴图片和文本，只能同时使用一个\n                if (!canDo()) {\n                    return;\n                }\n\n                // 获取粘贴的图片\n                var pasteFiles = getPasteImgs(e);\n                if (!pasteFiles || !pasteFiles.length) {\n                    return;\n                }\n\n                // 获取当前的元素\n                var $selectionElem = editor.selection.getSelectionContainerElem();\n                if (!$selectionElem) {\n                    return;\n                }\n                var nodeName = $selectionElem.getNodeName();\n\n                // code 中粘贴忽略\n                if (nodeName === 'CODE' || nodeName === 'PRE') {\n                    return;\n                }\n\n                // 上传图片\n                var uploadImg = editor.uploadImg;\n                uploadImg.uploadImg(pasteFiles);\n            });\n        },\n\n        // tab 特殊处理\n        _tabHandle: function _tabHandle() {\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n\n            $textElem.on('keydown', function (e) {\n                if (e.keyCode !== 9) {\n                    return;\n                }\n                if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                    // 必须原生支持 insertHTML 命令\n                    return;\n                }\n                var $selectionElem = editor.selection.getSelectionContainerElem();\n                if (!$selectionElem) {\n                    return;\n                }\n                var $parentElem = $selectionElem.parent();\n                var selectionNodeName = $selectionElem.getNodeName();\n                var parentNodeName = $parentElem.getNodeName();\n\n                if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                    // <pre><code> 里面\n                    editor.cmd.do('insertHTML', '    ');\n                } else {\n                    // 普通文字\n                    editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n                }\n\n                e.preventDefault();\n            });\n        },\n\n        // img 点击\n        _imgHandle: function _imgHandle() {\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n\n            // 为图片增加 selected 样式\n            $textElem.on('click', 'img', function (e) {\n                var img = this;\n                var $img = $(img);\n\n                if ($img.attr('data-w-e') === '1') {\n                    // 是表情图片，忽略\n                    return;\n                }\n\n                // 记录当前点击过的图片\n                editor._selectedImg = $img;\n\n                // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n                editor.selection.createRangeByElem($img);\n                editor.selection.restoreSelection();\n            });\n\n            // 去掉图片的 selected 样式\n            $textElem.on('click  keyup', function (e) {\n                if (e.target.matches('img')) {\n                    // 点击的是图片，忽略\n                    return;\n                }\n                // 删除记录\n                editor._selectedImg = null;\n            });\n        },\n\n        // 拖拽事件\n        _dragHandle: function _dragHandle() {\n            var editor = this.editor;\n\n            // 禁用 document 拖拽事件\n            var $document = $(document);\n            $document.on('dragleave drop dragenter dragover', function (e) {\n                e.preventDefault();\n            });\n\n            // 添加编辑区域拖拽事件\n            var $textElem = editor.$textElem;\n            $textElem.on('drop', function (e) {\n                e.preventDefault();\n                var files = e.dataTransfer && e.dataTransfer.files;\n                if (!files || !files.length) {\n                    return;\n                }\n\n                // 上传图片\n                var uploadImg = editor.uploadImg;\n                uploadImg.uploadImg(files);\n            });\n        }\n    };\n\n    /*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\n    function Command(editor) {\n        this.editor = editor;\n    }\n\n// 修改原型\n    Command.prototype = {\n        constructor: Command,\n\n        // 执行命令\n        do: function _do(name, value) {\n            var editor = this.editor;\n\n            // 使用 styleWithCSS\n            if (!editor._useStyleWithCSS) {\n                document.execCommand('styleWithCSS', null, true);\n                editor._useStyleWithCSS = true;\n            }\n\n            // 如果无选区，忽略\n            if (!editor.selection.getRange()) {\n                return;\n            }\n\n            // 恢复选取\n            editor.selection.restoreSelection();\n\n            // 执行\n            var _name = '_' + name;\n            if (this[_name]) {\n                // 有自定义事件\n                this[_name](value);\n            } else {\n                // 默认 command\n                this._execCommand(name, value);\n            }\n\n            // 修改菜单状态\n            editor.menus.changeActive();\n\n            // 最后，恢复选取保证光标在原来的位置闪烁\n            editor.selection.saveRange();\n            editor.selection.restoreSelection();\n\n            // 触发 onchange\n            editor.change && editor.change();\n        },\n\n        // 自定义 insertHTML 事件\n        _insertHTML: function _insertHTML(html) {\n            var editor = this.editor;\n            var range = editor.selection.getRange();\n\n            if (this.queryCommandSupported('insertHTML')) {\n                // W3C\n                this._execCommand('insertHTML', html);\n            } else if (range.insertNode) {\n                // IE\n                range.deleteContents();\n                range.insertNode($(html)[0]);\n            } else if (range.pasteHTML) {\n                // IE <= 10\n                range.pasteHTML(html);\n            }\n        },\n\n        // 插入 elem\n        _insertElem: function _insertElem($elem) {\n            var editor = this.editor;\n            var range = editor.selection.getRange();\n\n            if (range.insertNode) {\n                range.deleteContents();\n                range.insertNode($elem[0]);\n            }\n        },\n\n        // 封装 execCommand\n        _execCommand: function _execCommand(name, value) {\n            document.execCommand(name, false, value);\n        },\n\n        // 封装 document.queryCommandValue\n        queryCommandValue: function queryCommandValue(name) {\n            return document.queryCommandValue(name);\n        },\n\n        // 封装 document.queryCommandState\n        queryCommandState: function queryCommandState(name) {\n            return document.queryCommandState(name);\n        },\n\n        // 封装 document.queryCommandSupported\n        queryCommandSupported: function queryCommandSupported(name) {\n            return document.queryCommandSupported(name);\n        }\n    };\n\n    /*\n    selection range API\n*/\n\n// 构造函数\n    function API(editor) {\n        this.editor = editor;\n        this._currentRange = null;\n    }\n\n// 修改原型\n    API.prototype = {\n        constructor: API,\n\n        // 获取 range 对象\n        getRange: function getRange() {\n            return this._currentRange;\n        },\n\n        // 保存选区\n        saveRange: function saveRange(_range) {\n            if (_range) {\n                // 保存已有选区\n                this._currentRange = _range;\n                return;\n            }\n\n            // 获取当前的选区\n            var selection = window.getSelection();\n            if (selection.rangeCount === 0) {\n                return;\n            }\n            var range = selection.getRangeAt(0);\n\n            // 判断选区内容是否在编辑内容之内\n            var $containerElem = this.getSelectionContainerElem(range);\n            if (!$containerElem) {\n                return;\n            }\n\n            // 判断选区内容是否在不可编辑区域之内\n            if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n                return;\n            }\n\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n            if ($textElem.isContain($containerElem)) {\n                // 是编辑内容之内的\n                this._currentRange = range;\n            }\n        },\n\n        // 折叠选区\n        collapseRange: function collapseRange(toStart) {\n            if (toStart == null) {\n                // 默认为 false\n                toStart = false;\n            }\n            var range = this._currentRange;\n            if (range) {\n                range.collapse(toStart);\n            }\n        },\n\n        // 选中区域的文字\n        getSelectionText: function getSelectionText() {\n            var range = this._currentRange;\n            if (range) {\n                return this._currentRange.toString();\n            } else {\n                return '';\n            }\n        },\n\n        // 选区的 $Elem\n        getSelectionContainerElem: function getSelectionContainerElem(range) {\n            range = range || this._currentRange;\n            var elem = void 0;\n            if (range) {\n                elem = range.commonAncestorContainer;\n                return $(elem.nodeType === 1 ? elem : elem.parentNode);\n            }\n        },\n        getSelectionStartElem: function getSelectionStartElem(range) {\n            range = range || this._currentRange;\n            var elem = void 0;\n            if (range) {\n                elem = range.startContainer;\n                return $(elem.nodeType === 1 ? elem : elem.parentNode);\n            }\n        },\n        getSelectionEndElem: function getSelectionEndElem(range) {\n            range = range || this._currentRange;\n            var elem = void 0;\n            if (range) {\n                elem = range.endContainer;\n                return $(elem.nodeType === 1 ? elem : elem.parentNode);\n            }\n        },\n\n        // 选区是否为空\n        isSelectionEmpty: function isSelectionEmpty() {\n            var range = this._currentRange;\n            if (range && range.startContainer) {\n                if (range.startContainer === range.endContainer) {\n                    if (range.startOffset === range.endOffset) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        },\n\n        // 恢复选区\n        restoreSelection: function restoreSelection() {\n            var selection = window.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(this._currentRange);\n        },\n\n        // 创建一个空白（即 &#8203 字符）选区\n        createEmptyRange: function createEmptyRange() {\n            var editor = this.editor;\n            var range = this.getRange();\n            var $elem = void 0;\n\n            if (!range) {\n                // 当前无 range\n                return;\n            }\n            if (!this.isSelectionEmpty()) {\n                // 当前选区必须没有内容才可以\n                return;\n            }\n\n            try {\n                // 目前只支持 webkit 内核\n                if (UA.isWebkit()) {\n                    // 插入 &#8203\n                    editor.cmd.do('insertHTML', '&#8203;');\n                    // 修改 offset 位置\n                    range.setEnd(range.endContainer, range.endOffset + 1);\n                    // 存储\n                    this.saveRange(range);\n                } else {\n                    $elem = $('<strong>&#8203;</strong>');\n                    editor.cmd.do('insertElem', $elem);\n                    this.createRangeByElem($elem, true);\n                }\n            } catch (ex) {\n                // 部分情况下会报错，兼容一下\n            }\n        },\n\n        // 根据 $Elem 设置选区\n        createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n            // $elem - 经过封装的 elem\n            // toStart - true 开始位置，false 结束位置\n            // isContent - 是否选中Elem的内容\n            if (!$elem.length) {\n                return;\n            }\n\n            var elem = $elem[0];\n            var range = document.createRange();\n\n            if (isContent) {\n                range.selectNodeContents(elem);\n            } else {\n                range.selectNode(elem);\n            }\n\n            if (typeof toStart === 'boolean') {\n                range.collapse(toStart);\n            }\n\n            // 存储 range\n            this.saveRange(range);\n        }\n    };\n\n    /*\n    上传进度条\n*/\n\n    function Progress(editor) {\n        this.editor = editor;\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n        this._timeoutId = 0;\n        this.$textContainer = editor.$textContainerElem;\n        this.$bar = $('<div class=\"w-e-progress\"></div>');\n    }\n\n    Progress.prototype = {\n        constructor: Progress,\n\n        show: function show(progress) {\n            var _this = this;\n\n            // 状态处理\n            if (this._isShow) {\n                return;\n            }\n            this._isShow = true;\n\n            // 渲染\n            var $bar = this.$bar;\n            if (!this._isRender) {\n                var $textContainer = this.$textContainer;\n                $textContainer.append($bar);\n            } else {\n                this._isRender = true;\n            }\n\n            // 改变进度（节流，100ms 渲染一次）\n            if (Date.now() - this._time > 100) {\n                if (progress <= 1) {\n                    $bar.css('width', progress * 100 + '%');\n                    this._time = Date.now();\n                }\n            }\n\n            // 隐藏\n            var timeoutId = this._timeoutId;\n            if (timeoutId) {\n                clearTimeout(timeoutId);\n            }\n            timeoutId = setTimeout(function () {\n                _this._hide();\n            }, 500);\n        },\n\n        _hide: function _hide() {\n            var $bar = this.$bar;\n            $bar.remove();\n\n            // 修改状态\n            this._time = 0;\n            this._isShow = false;\n            this._isRender = false;\n        }\n    };\n\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n    } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    /*\n    上传图片\n*/\n\n// 构造函数\n    function UploadImg(editor) {\n        this.editor = editor;\n    }\n\n// 原型\n    UploadImg.prototype = {\n        constructor: UploadImg,\n\n        // 根据 debug 弹出不同的信息\n        _alert: function _alert(alertInfo, debugInfo) {\n            var editor = this.editor;\n            var debug = editor.config.debug;\n            var customAlert = editor.config.customAlert;\n\n            if (debug) {\n                throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n            } else {\n                if (customAlert && typeof customAlert === 'function') {\n                    customAlert(alertInfo);\n                } else {\n                    alert(alertInfo);\n                }\n            }\n        },\n\n        // 根据链接插入图片\n        insertLinkImg: function insertLinkImg(link) {\n            var _this2 = this;\n\n            if (!link) {\n                return;\n            }\n            var editor = this.editor;\n            var config = editor.config;\n\n            // 校验格式\n            var linkImgCheck = config.linkImgCheck;\n            var checkResult = void 0;\n            if (linkImgCheck && typeof linkImgCheck === 'function') {\n                checkResult = linkImgCheck(link);\n                if (typeof checkResult === 'string') {\n                    // 校验失败，提示信息\n                    alert(checkResult);\n                    return;\n                }\n            }\n\n            editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n\n            // 验证图片 url 是否有效，无效的话给出提示\n            var img = document.createElement('img');\n            img.onload = function () {\n                var callback = config.linkImgCallback;\n                if (callback && typeof callback === 'function') {\n                    callback(link);\n                }\n\n                img = null;\n            };\n            img.onerror = function () {\n                img = null;\n                // 无法成功下载图片\n                _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n                return;\n            };\n            img.onabort = function () {\n                img = null;\n            };\n            img.src = link;\n        },\n\n        // 上传图片\n        uploadImg: function uploadImg(files) {\n            var _this3 = this;\n\n            if (!files || !files.length) {\n                return;\n            }\n\n            // ------------------------------ 获取配置信息 ------------------------------\n            var editor = this.editor;\n            var config = editor.config;\n            var uploadImgServer = config.uploadImgServer;\n            var uploadImgShowBase64 = config.uploadImgShowBase64;\n\n            var maxSize = config.uploadImgMaxSize;\n            var maxSizeM = maxSize / 1024 / 1024;\n            var maxLength = config.uploadImgMaxLength || 10000;\n            var uploadFileName = config.uploadFileName || '';\n            var uploadImgParams = config.uploadImgParams || {};\n            var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n            var uploadImgHeaders = config.uploadImgHeaders || {};\n            var hooks = config.uploadImgHooks || {};\n            var timeout = config.uploadImgTimeout || 3000;\n            var withCredentials = config.withCredentials;\n            if (withCredentials == null) {\n                withCredentials = false;\n            }\n            var customUploadImg = config.customUploadImg;\n\n            if (!customUploadImg) {\n                // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n                if (!uploadImgServer && !uploadImgShowBase64) {\n                    return;\n                }\n            }\n\n            // ------------------------------ 验证文件信息 ------------------------------\n            var resultFiles = [];\n            var errInfo = [];\n            arrForEach(files, function (file) {\n                var name = file.name;\n                var size = file.size;\n\n                // chrome 低版本 name === undefined\n                if (!name || !size) {\n                    return;\n                }\n\n                if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n                    // 后缀名不合法，不是图片\n                    errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                    return;\n                }\n                if (maxSize < size) {\n                    // 上传图片过大\n                    errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                    return;\n                }\n\n                // 验证通过的加入结果列表\n                resultFiles.push(file);\n            });\n            // 抛出验证信息\n            if (errInfo.length) {\n                this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n                return;\n            }\n            if (resultFiles.length > maxLength) {\n                this._alert('一次最多上传' + maxLength + '张图片');\n                return;\n            }\n\n            // ------------------------------ 自定义上传 ------------------------------\n            if (customUploadImg && typeof customUploadImg === 'function') {\n                customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n                // 阻止以下代码执行\n                return;\n            }\n\n            // 添加图片数据\n            var formdata = new FormData();\n            arrForEach(resultFiles, function (file) {\n                var name = uploadFileName || file.name;\n                formdata.append(name, file);\n            });\n\n            // ------------------------------ 上传图片 ------------------------------\n            if (uploadImgServer && typeof uploadImgServer === 'string') {\n                // 添加参数\n                var uploadImgServerArr = uploadImgServer.split('#');\n                uploadImgServer = uploadImgServerArr[0];\n                var uploadImgServerHash = uploadImgServerArr[1] || '';\n                objForEach(uploadImgParams, function (key, val) {\n                    // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n                    // val = encodeURIComponent(val)\n\n                    // 第一，将参数拼接到 url 中\n                    if (uploadImgParamsWithUrl) {\n                        if (uploadImgServer.indexOf('?') > 0) {\n                            uploadImgServer += '&';\n                        } else {\n                            uploadImgServer += '?';\n                        }\n                        uploadImgServer = uploadImgServer + key + '=' + val;\n                    }\n\n                    // 第二，将参数添加到 formdata 中\n                    formdata.append(key, val);\n                });\n                if (uploadImgServerHash) {\n                    uploadImgServer += '#' + uploadImgServerHash;\n                }\n\n                // 定义 xhr\n                var xhr = new XMLHttpRequest();\n                xhr.open('POST', uploadImgServer);\n\n                // 设置超时\n                xhr.timeout = timeout;\n                xhr.ontimeout = function () {\n                    // hook - timeout\n                    if (hooks.timeout && typeof hooks.timeout === 'function') {\n                        hooks.timeout(xhr, editor);\n                    }\n\n                    _this3._alert('上传图片超时');\n                };\n\n                // 监控 progress\n                if (xhr.upload) {\n                    xhr.upload.onprogress = function (e) {\n                        var percent = void 0;\n                        // 进度条\n                        var progressBar = new Progress(editor);\n                        if (e.lengthComputable) {\n                            percent = e.loaded / e.total;\n                            progressBar.show(percent);\n                        }\n                    };\n                }\n\n                // 返回数据\n                xhr.onreadystatechange = function () {\n                    var result = void 0;\n                    if (xhr.readyState === 4) {\n                        if (xhr.status < 200 || xhr.status >= 300) {\n                            // hook - error\n                            if (hooks.error && typeof hooks.error === 'function') {\n                                hooks.error(xhr, editor);\n                            }\n\n                            // xhr 返回状态错误\n                            _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                            return;\n                        }\n\n                        result = xhr.responseText;\n                        if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                            try {\n                                result = JSON.parse(result);\n                            } catch (ex) {\n                                // hook - fail\n                                if (hooks.fail && typeof hooks.fail === 'function') {\n                                    hooks.fail(xhr, editor, result);\n                                }\n\n                                _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                                return;\n                            }\n                        }\n                        if (!hooks.customInsert && result.errno != '0') {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            // 数据错误\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                        } else {\n                            if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                                // 使用者自定义插入方法\n                                hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                            } else {\n                                // 将图片插入编辑器\n                                var data = result.data || [];\n                                data.forEach(function (link) {\n                                    _this3.insertLinkImg(link);\n                                });\n                            }\n\n                            // hook - success\n                            if (hooks.success && typeof hooks.success === 'function') {\n                                hooks.success(xhr, editor, result);\n                            }\n                        }\n                    }\n                };\n\n                // hook - before\n                if (hooks.before && typeof hooks.before === 'function') {\n                    var beforeResult = hooks.before(xhr, editor, resultFiles);\n                    if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                        if (beforeResult.prevent) {\n                            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                            this._alert(beforeResult.msg);\n                            return;\n                        }\n                    }\n                }\n\n                // 自定义 headers\n                objForEach(uploadImgHeaders, function (key, val) {\n                    xhr.setRequestHeader(key, val);\n                });\n\n                // 跨域传 cookie\n                xhr.withCredentials = withCredentials;\n\n                // 发送请求\n                xhr.send(formdata);\n\n                // 注意，要 return 。不去操作接下来的 base64 显示方式\n                return;\n            }\n\n            // ------------------------------ 显示 base64 格式 ------------------------------\n            if (uploadImgShowBase64) {\n                arrForEach(files, function (file) {\n                    var _this = _this3;\n                    var reader = new FileReader();\n                    reader.readAsDataURL(file);\n                    reader.onload = function () {\n                        _this.insertLinkImg(this.result);\n                    };\n                });\n            }\n        }\n    };\n\n    /*\n    编辑器构造函数\n*/\n\n// id，累加\n    var editorId = 1;\n\n// 构造函数\n    function Editor(toolbarSelector, textSelector) {\n        if (toolbarSelector == null) {\n            // 没有传入任何参数，报错\n            throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n        }\n        // id，用以区分单个页面不同的编辑器对象\n        this.id = 'wangEditor-' + editorId++;\n\n        this.toolbarSelector = toolbarSelector;\n        this.textSelector = textSelector;\n\n        // 自定义配置\n        this.customConfig = {};\n    }\n\n// 修改原型\n    Editor.prototype = {\n        constructor: Editor,\n\n        // 初始化配置\n        _initConfig: function _initConfig() {\n            // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n            var target = {};\n            this.config = Object.assign(target, config, this.customConfig);\n\n            // 将语言配置，生成正则表达式\n            var langConfig = this.config.lang || {};\n            var langArgs = [];\n            objForEach(langConfig, function (key, val) {\n                // key 即需要生成正则表达式的规则，如“插入链接”\n                // val 即需要被替换成的语言，如“insert link”\n                langArgs.push({\n                    reg: new RegExp(key, 'img'),\n                    val: val\n\n                });\n            });\n            this.config.langArgs = langArgs;\n        },\n\n        // 初始化 DOM\n        _initDom: function _initDom() {\n            var _this = this;\n\n            var toolbarSelector = this.toolbarSelector;\n            var $toolbarSelector = $(toolbarSelector);\n            var textSelector = this.textSelector;\n\n            var config$$1 = this.config;\n            var zIndex = config$$1.zIndex;\n            var minHeight = config$$1.minHeight;\n            var maxHeight = config$$1.maxHeight;\n            var textBgColor = config$$1.textBgColor;\n\n            // 定义变量\n            var $toolbarElem = void 0,\n                $textContainerElem = void 0,\n                $textElem = void 0,\n                $children = void 0;\n\n            if (textSelector == null) {\n                // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n                $toolbarElem = $('<div></div>');\n                $textContainerElem = $('<div></div>');\n\n                // 将编辑器区域原有的内容，暂存起来\n                $children = $toolbarSelector.children();\n\n                // 添加到 DOM 结构中\n                $toolbarSelector.append($toolbarElem).append($textContainerElem);\n            } else {\n                // toolbar 和 text 的选择器都有值，记录属性\n                $toolbarElem = $toolbarSelector;\n                $textContainerElem = $(textSelector);\n                // 将编辑器区域原有的内容，暂存起来\n                $children = $textContainerElem.children();\n            }\n\n            // 编辑区域\n            $textElem = $('<div></div>');\n            $textElem.attr('contenteditable', 'true');\n\n            // 初始化编辑区域内容\n            if ($children && $children.length) {\n                $textElem.append($children);\n            } else {\n                $textElem.append($('<p><br></p>'));\n            }\n\n            // 编辑区域加入DOM\n            $textContainerElem.append($textElem);\n\n            // 设置通用的 class\n            $toolbarElem.addClass('w-e-toolbar');\n            $textContainerElem.addClass('w-e-text-container');\n            $textContainerElem.css('z-index', zIndex);\n            $textElem.addClass('w-e-text').css('min-height',minHeight)\n                .css('max-height',maxHeight).css('background-color',textBgColor);\n            // 添加 ID\n            var toolbarElemId = getRandom('toolbar-elem');\n            $toolbarElem.attr('id', toolbarElemId);\n            var textElemId = getRandom('text-elem');\n            $textElem.attr('id', textElemId);\n\n            // 记录属性\n            this.$toolbarElem = $toolbarElem;\n            this.$textContainerElem = $textContainerElem;\n            this.$textElem = $textElem;\n            this.toolbarElemId = toolbarElemId;\n            this.textElemId = textElemId;\n\n            // 记录输入法的开始和结束\n            var compositionEnd = true;\n            $textContainerElem.on('compositionstart', function () {\n                // 输入法开始输入\n                compositionEnd = false;\n            });\n            $textContainerElem.on('compositionend', function () {\n                // 输入法结束输入\n                compositionEnd = true;\n            });\n\n            // 绑定 onchange\n            $textContainerElem.on('click keyup', function () {\n                // 输入法结束才出发 onchange\n                compositionEnd && _this.change && _this.change();\n            });\n            $toolbarElem.on('click', function () {\n                this.change && this.change();\n            });\n\n            //绑定 onfocus 与 onblur 事件\n            if (config$$1.onfocus || config$$1.onblur) {\n                // 当前编辑器是否是焦点状态\n                this.isFocus = false;\n\n                $(document).on('click', function (e) {\n                    //判断当前点击元素是否在编辑器内\n                    var isChild = $textElem.isContain($(e.target));\n\n                    //判断当前点击元素是否为工具栏\n                    var isToolbar = $toolbarElem.isContain($(e.target));\n                    var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n                    if (!isChild) {\n                        //若为选择工具栏中的功能，则不视为成blur操作\n                        if (isToolbar && !isMenu) {\n                            return;\n                        }\n\n                        if (_this.isFocus) {\n                            _this.onblur && _this.onblur();\n                        }\n                        _this.isFocus = false;\n                    } else {\n                        if (!_this.isFocus) {\n                            _this.onfocus && _this.onfocus();\n                        }\n                        _this.isFocus = true;\n                    }\n                });\n            }\n        },\n\n        // 封装 command\n        _initCommand: function _initCommand() {\n            this.cmd = new Command(this);\n        },\n\n        // 封装 selection range API\n        _initSelectionAPI: function _initSelectionAPI() {\n            this.selection = new API(this);\n        },\n\n        // 添加图片上传\n        _initUploadImg: function _initUploadImg() {\n            this.uploadImg = new UploadImg(this);\n        },\n\n        // 初始化菜单\n        _initMenus: function _initMenus() {\n            this.menus = new Menus(this);\n            this.menus.init();\n        },\n\n        // 添加 text 区域\n        _initText: function _initText() {\n            this.txt = new Text(this);\n            this.txt.init();\n        },\n\n        // 初始化选区，将光标定位到内容尾部\n        initSelection: function initSelection(newLine) {\n            var $textElem = this.$textElem;\n            var $children = $textElem.children();\n            if (!$children.length) {\n                // 如果编辑器区域无内容，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n\n            var $last = $children.last();\n\n            if (newLine) {\n                // 新增一个空行\n                var html = $last.html().toLowerCase();\n                var nodeName = $last.getNodeName();\n                if (html !== '<br/>' && html !== '<br/>' || nodeName !== 'P') {\n                    // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                    $textElem.append($('<p><br></p>'));\n                    this.initSelection();\n                    return;\n                }\n            }\n\n            this.selection.createRangeByElem($last, false, true);\n            this.selection.restoreSelection();\n        },\n\n        // 绑定事件\n        _bindEvent: function _bindEvent() {\n            // -------- 绑定 onchange 事件 --------\n            var onChangeTimeoutId = 0;\n            var beforeChangeHtml = this.txt.html();\n            var config$$1 = this.config;\n\n            // onchange 触发延迟时间\n            var onchangeTimeout = config$$1.onchangeTimeout;\n            onchangeTimeout = parseInt(onchangeTimeout, 10);\n            if (!onchangeTimeout || onchangeTimeout <= 0) {\n                onchangeTimeout = 200;\n            }\n\n            var onchange = config$$1.onchange;\n            if (onchange && typeof onchange === 'function') {\n                // 触发 change 的有三个场景：\n                // 1. $textContainerElem.on('click keyup')\n                // 2. $toolbarElem.on('click')\n                // 3. editor.cmd.do()\n                this.change = function () {\n                    // 判断是否有变化\n                    var currentHtml = this.txt.html();\n\n                    if (currentHtml.length === beforeChangeHtml.length) {\n                        // 需要比较每一个字符\n                        if (currentHtml === beforeChangeHtml) {\n                            return;\n                        }\n                    }\n\n                    // 执行，使用节流\n                    if (onChangeTimeoutId) {\n                        clearTimeout(onChangeTimeoutId);\n                    }\n                    onChangeTimeoutId = setTimeout(function () {\n                        // 触发配置的 onchange 函数\n                        onchange(currentHtml);\n                        beforeChangeHtml = currentHtml;\n                    }, onchangeTimeout);\n                };\n            }\n\n            // -------- 绑定 onblur 事件 --------\n            var onblur = config$$1.onblur;\n            if (onblur && typeof onblur === 'function') {\n                this.onblur = function () {\n                    var currentHtml = this.txt.html();\n                    onblur(currentHtml);\n                };\n            }\n\n            // -------- 绑定 onfocus 事件 --------\n            var onfocus = config$$1.onfocus;\n            if (onfocus && typeof onfocus === 'function') {\n                this.onfocus = function () {\n                    onfocus();\n                };\n            }\n        },\n\n        // 创建编辑器\n        create: function create() {\n            // 初始化配置信息\n            this._initConfig();\n\n            // 初始化 DOM\n            this._initDom();\n\n            // 封装 command API\n            this._initCommand();\n\n            // 封装 selection range API\n            this._initSelectionAPI();\n\n            // 添加 text\n            this._initText();\n\n            // 初始化菜单\n            this._initMenus();\n\n            // 添加 图片上传\n            this._initUploadImg();\n\n            // 初始化选区，将光标定位到内容尾部\n            this.initSelection(true);\n\n            // 绑定事件\n            this._bindEvent();\n        },\n\n        // 解绑所有事件（暂时不对外开放）\n        _offAllEvent: function _offAllEvent() {\n            $.offAll();\n        }\n    };\n\n// 检验是否浏览器环境\n    try {\n        document;\n    } catch (ex) {\n        throw new Error('请在浏览器环境下运行');\n    }\n\n// polyfill\n    polyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\n    var inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  padding: 4px 0;  text-align: left;  list-style-type: none;  background-color: #fff;  background-clip: padding-box;  border-radius: 4px;  outline: none;  box-shadow: 0 2px 8px rgba(0,0,0,.15);  -webkit-transform: translateZ(0);  z-index: 3;}.w-e-droplist:before{  content: \"\";  position: absolute;  left: 14px;  top: -3px;  display: block;  background-color: #fff;  width: 8px;  height: 8px;  transform: rotate(45deg);}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  font-size: 14px;  border-bottom: 1px solid #f0f0f0;  margin-bottom: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-droplist ul.w-e-list li.w-e-item {  clear: both;  margin: 0;  padding: 5px 12px;  color: rgba(0,0,0,.65);  font-weight: 400;  font-size: 14px;  line-height: 22px;  white-space: nowrap;  cursor: pointer;  transition: all .3s;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #e6f7ff;  color: #1890ff;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;  display: flex;  flex-wrap: wrap;}ul.w-e-block .color-block{  display: inline-block;  height: 20px;  width: 100%;  border-radius: 4px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  flex: 0 0 25%;  height: 20px;  width: 20px;  text-align: center;  padding: 0 3px;  margin-bottom: 6px;}@font-face {font-family: \"antd-icon\";  src: url(data:application/x-font-woff2;charset=utf-8;base64,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) format(\\'woff2\\');  font-style: normal;  font-size: inherit;}[class^=\"icon-\"],[class*=\"icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'antd-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.icon-bulb:before {  content: \"\\\\e7c3\";}.icon-block:before {  content: \"\\\\e7e0\";}.icon-number:before {  content: \"\\\\e802\";}.icon-close:before {  content: \"\\\\e803\";}.icon-smile:before {  content: \"\\\\e783\";}.icon-undo:before {  content: \"\\\\e787\";}.icon-redo:before {  content: \"\\\\e788\";}.icon-cloud-upload:before {  content: \"\\\\e7d9\";}.icon-video:before {  content: \"\\\\e7da\";}.icon-image:before {  content: \"\\\\e7de\";}.icon-table:before {  content: \"\\\\e7df\";}.icon-link:before {  content: \"\\\\e7e2\";}.icon-unorderedlist:before {  content: \"\\\\e7f4\";}.icon-orderedlist:before {  content: \"\\\\e7f5\";}.icon-align-right:before {  content: \"\\\\e7f6\";}.icon-align-center:before {  content: \"\\\\e7f7\";}.icon-align-left:before {  content: \"\\\\e7f8\";}.icon-bold:before {  content: \"\\\\e7f9\";}.icon-font-colors:before {  content: \"\\\\e7fa\";}.icon-font-size:before {  content: \"\\\\e7fb\";}.icon-line-height:before {  content: \"\\\\e7fc\";}.icon-strikethrough:before {  content: \"\\\\e7fd\";}.icon-underline:before {  content: \"\\\\e7fe\";}.icon-italic:before {  content: \"\\\\e7ff\";}.icon-code:before {  content: \"\\\\e800\";}.icon-bg-colors:before {  content: \"\\\\e801\";}.w-e-toolbar {  box-sizing: border-box;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 5px;  background-color: #fafafa;  border:1px solid #d9d9d9;  border-radius: 4px 4px 0 0;}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;  color: rgba(0,0,0,.65);  font-size: 18px;  border-radius: 4px;}.w-e-toolbar .w-e-menu:hover,.w-e-toolbar .w-e-menu:focus{  background-color: #e6f7ff;  color: #1890ff;}.w-e-toolbar .w-e-active i ,.w-e-toolbar .w-e-active:hover i {  color: #1890ff;}.w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  padding: 4px 0;  text-align: left;  list-style-type: none;  background-color: #fff;  background-clip: padding-box;  border-radius: 4px;  outline: none;  box-shadow: 0 2px 8px rgba(0,0,0,.15);  -webkit-transform: translateZ(0);  z-index: 3;}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #e8e8e8;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #1890ff;  border-bottom: 1px solid #1890ff;  cursor: default;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-panel-tab-content textarea {  box-sizing: border-box;  margin: 0;  font-variant: tabular-nums;  list-style: none;  font-feature-settings: \"tnum\";  position: relative;  display: inline-block;  width: 100%;  padding: 4px 11px;  color: rgba(0,0,0,.65);  font-size: 14px;  line-height: 1.5;  background-color: #fff;  background-image: none;  border: 1px solid #d9d9d9;  border-radius: 4px;  transition: all .3s;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #40a9ff;  border-right-width: 1px!important;  outline: 0;  box-shadow: 0 0 0 2px rgba(24,144,255,.2);}.w-e-panel-tab-content textarea::-webkit-scrollbar {  width:6px;  height:6px;  padding-top:8px;  background-color:transparent;}.w-e-panel-tab-content textarea::-webkit-scrollbar-thumb {  background-color:#d9d9d9;}.w-e-panel-tab-content input[type=text] {  box-sizing: border-box;  margin: 0;  font-variant: tabular-nums;  list-style: none;  font-feature-settings: \"tnum\";  position: relative;  display: inline-block;  width: 100%;  height: 32px;  padding: 4px 11px;  color: rgba(0,0,0,.65);  font-size: 14px;  line-height: 1.5;  background-color: #fff;  background-image: none;  border: 1px solid #d9d9d9;  border-radius: 4px;  transition: all .3s;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  outline: 0;  box-shadow: 0 0 0 2px rgba(24,144,255,.2);  border-color: #40a9ff;  border-right-width: 1px!important;}.w-e-panel-tab-content .w-e-button-container button {  line-height: 1.499;  position: relative;  display: inline-block;  font-weight: 400;  white-space: nowrap;  text-align: center;  background-image: none;  cursor: pointer;  transition: all .3s cubic-bezier(.645,.045,.355,1);  -webkit-user-select: none;  -moz-user-select: none;  -ms-user-select: none;  user-select: none;  touch-action: manipulation;  height: 32px;  padding: 0 15px;  font-size: 14px;  border-radius: 4px;  color: rgba(0, 0, 3, 0.65);  color: #fff;  background-color: #1890ff;  border:1px solid #1890ff;  text-shadow: 0 -1px 0 rgba(0,0,0,.12);  box-shadow: 0 2px 0 rgba(0,0,0,.045);}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  color: #fff;  background-color: #40a9ff;  border-color: #40a9ff;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  margin-bottom: 4px;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  color: #999;  cursor: pointer;  font-size: 50px;  line-height: 1;  border:1px dashed #e8e8e8;  border-radius: 4px;  background-color: #fafafa;}.w-e-up-btn .upload-text{  font-size: 14px;  margin-bottom: 20px;  color: rgba(0,0,0,.65);}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #1890ff;  border-color: #1890ff;  transition: all 0.4s;}.w-e-text::-webkit-scrollbar {  width:6px;  height:6px;  padding-top:8px;  background-color:transparent;}.w-e-text::-webkit-scrollbar-thumb {  background-color:#d9d9d9;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 20px;  min-height: 100px;  max-height: 400px;  border:1px solid #d9d9d9;  border-top: none;  border-radius: 0 0 4px 4px;  overflow-y: auto;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}';\n    var style = document.createElement('style');\n    style.type = 'text/css';\n    style.innerHTML = inlinecss;\n    document.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\n    return window.wangEditor || Editor;\n\n})));\n"],"names":["global","factory","exports","module","define","amd","wangEditor","this","isDOMList","selector","HTMLCollection","NodeList","eventList","DomElement","result","html","div","nodeType","selectorResult","Array","replace","trim","indexOf","document","createElement","innerHTML","children","querySelectorAll","length","i","$","prototype","constructor","forEach","fn","elem","call","clone","deep","cloneList","push","cloneNode","get","index","first","last","on","type","types","split","addEventListener","e","target","matches","off","removeEventListener","attr","key","val","getAttribute","setAttribute","addClass","className","arr","filter","item","join","removeClass","css","currentStyle","style","resultArr","map","show","hide","childNodes","append","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","value","focus","parentUntil","_currentElem","results","equal","$elem","insertBefore","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","config","menus","fontNames","colors","emotions","title","content","alt","src","zIndex","debug","linkCheck","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","success","fail","error","timeout","qiniu","width","minHeight","maxHeight","textBgColor","UA","_ua","navigator","userAgent","isWebkit","test","isIE","window","objForEach","obj","hasOwnProperty","arrForEach","fakeArr","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","Bold","editor","_active","onClick","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","replaceLang","str","langArgs","reg","_emptyFn","DropList","menu","opt","_this","$container","$title","titleHtml","list","$list","elemHtml","$li","hideTimeoutId","setTimeout","_rendered","_show","Head","droplist","_command","FontSize","FontName","fontName","clearTimeout","menuHeight","$menuELem","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","$body","$textContainerElem","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","$inputs","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","link","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","checkResult","alert","$selectionELem","$parent","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$trs","trLength","tr","locationData","$currentTr","newTr","trData","tdIndex","$currentTd","name","toLowerCase","$table","textValId","width30","width50","width100","delBtn","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","tabsConfig","fileElem","click","fileList","files","url","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","Menus","getPasteText","clipboardData","originalEvent","getData","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$bar","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","getChildrenJSON","curElem","elemResult","textContent","tag","attrData","attrList","attributes","attrListLength","attrs","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","keyCode","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","codeHandle","txtHtml","ignoreImg","pasteTime","canDo","now","Date","flag","pasteHtml","filterStyle","pasteText","docSplitHtml","getPasteHtml","ex","pasteFiles","items","getAsFile","getPasteImgs","dataTransfer","_name","_useStyleWithCSS","execCommand","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","$containerElem","getSelection","rangeCount","getRangeAt","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","Symbol","iterator","UploadImg","_alert","alertInfo","debugInfo","customAlert","Error","img","onload","callback","onerror","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","xhr","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","data","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","editorId","Editor","toolbarSelector","textSelector","id","customConfig","_initConfig","Object","assign","langConfig","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","txt","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","create","_offAllEvent","varArgs","TypeError","to","arguments","nextSource","nextKey","getElementsByTagName"],"mappings":"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"}